// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: config/inspirit/v1/crew_duty_index.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//  ArithEnum 运算方式
type ArithEnum int32

const (
	ArithEnum_notSureArith ArithEnum = 0 // 默认空值
	ArithEnum_gt           ArithEnum = 1 // 大于
	ArithEnum_lt           ArithEnum = 2 // 小于
	ArithEnum_egt          ArithEnum = 3 // 大于等于
	ArithEnum_elt          ArithEnum = 4 // 小于等于
	ArithEnum_eq           ArithEnum = 5 // 等于
	ArithEnum_neq          ArithEnum = 6 // 不等于
)

// Enum value maps for ArithEnum.
var (
	ArithEnum_name = map[int32]string{
		0: "notSureArith",
		1: "gt",
		2: "lt",
		3: "egt",
		4: "elt",
		5: "eq",
		6: "neq",
	}
	ArithEnum_value = map[string]int32{
		"notSureArith": 0,
		"gt":           1,
		"lt":           2,
		"egt":          3,
		"elt":          4,
		"eq":           5,
		"neq":          6,
	}
)

func (x ArithEnum) Enum() *ArithEnum {
	p := new(ArithEnum)
	*p = x
	return p
}

func (x ArithEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArithEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_config_inspirit_v1_crew_duty_index_proto_enumTypes[0].Descriptor()
}

func (ArithEnum) Type() protoreflect.EnumType {
	return &file_config_inspirit_v1_crew_duty_index_proto_enumTypes[0]
}

func (x ArithEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArithEnum.Descriptor instead.
func (ArithEnum) EnumDescriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{0}
}

// CrewDutyIndex is the golang structure for table crew_duty_index.
type CrewDutyIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32     `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	ScoreIndex uint32    `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`             // 职责指数
	JobLevelId uint32    `protobuf:"varint,3,opt,name=JobLevelId,proto3" json:"JobLevelId"`             // 职级ID
	Arith      ArithEnum `protobuf:"varint,4,opt,name=Arith,proto3,enum=config.ArithEnum" json:"Arith"` // 运算方式
	Remark     string    `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark"`                      // 预留备注说明信息
	CreateTime string    `protobuf:"bytes,6,opt,name=CreateTime,proto3" json:"CreateTime"`              // 数据新增时间
	UpdateTime string    `protobuf:"bytes,7,opt,name=UpdateTime,proto3" json:"UpdateTime"`              // 最后一次更新数据时间
}

func (x *CrewDutyIndexInfo) Reset() {
	*x = CrewDutyIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrewDutyIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrewDutyIndexInfo) ProtoMessage() {}

func (x *CrewDutyIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrewDutyIndexInfo.ProtoReflect.Descriptor instead.
func (*CrewDutyIndexInfo) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{0}
}

func (x *CrewDutyIndexInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrewDutyIndexInfo) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *CrewDutyIndexInfo) GetJobLevelId() uint32 {
	if x != nil {
		return x.JobLevelId
	}
	return 0
}

func (x *CrewDutyIndexInfo) GetArith() ArithEnum {
	if x != nil {
		return x.Arith
	}
	return ArithEnum_notSureArith
}

func (x *CrewDutyIndexInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CrewDutyIndexInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CrewDutyIndexInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreateCrewDutyIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark     string    `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	ScoreIndex uint32    `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`             // 职责指数
	JobLevelId uint32    `protobuf:"varint,3,opt,name=JobLevelId,proto3" json:"JobLevelId"`             // 职级ID
	Arith      ArithEnum `protobuf:"varint,4,opt,name=Arith,proto3,enum=config.ArithEnum" json:"Arith"` // 运算方式
}

func (x *CreateCrewDutyIndexReq) Reset() {
	*x = CreateCrewDutyIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCrewDutyIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCrewDutyIndexReq) ProtoMessage() {}

func (x *CreateCrewDutyIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCrewDutyIndexReq.ProtoReflect.Descriptor instead.
func (*CreateCrewDutyIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCrewDutyIndexReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateCrewDutyIndexReq) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *CreateCrewDutyIndexReq) GetJobLevelId() uint32 {
	if x != nil {
		return x.JobLevelId
	}
	return 0
}

func (x *CreateCrewDutyIndexReq) GetArith() ArithEnum {
	if x != nil {
		return x.Arith
	}
	return ArithEnum_notSureArith
}

// 创建数据接口输出数据结构
type CreateCrewDutyIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewDutyIndex *CrewDutyIndexInfo `protobuf:"bytes,1,opt,name=CrewDutyIndex,proto3" json:"CrewDutyIndex"`
}

func (x *CreateCrewDutyIndexRes) Reset() {
	*x = CreateCrewDutyIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCrewDutyIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCrewDutyIndexRes) ProtoMessage() {}

func (x *CreateCrewDutyIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCrewDutyIndexRes.ProtoReflect.Descriptor instead.
func (*CreateCrewDutyIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCrewDutyIndexRes) GetCrewDutyIndex() *CrewDutyIndexInfo {
	if x != nil {
		return x.CrewDutyIndex
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOneCrewDutyIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewDutyIndex *CrewDutyIndexInfo `protobuf:"bytes,1,opt,name=CrewDutyIndex,proto3" json:"CrewDutyIndex"`
}

func (x *GetOneCrewDutyIndexReq) Reset() {
	*x = GetOneCrewDutyIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCrewDutyIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCrewDutyIndexReq) ProtoMessage() {}

func (x *GetOneCrewDutyIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCrewDutyIndexReq.ProtoReflect.Descriptor instead.
func (*GetOneCrewDutyIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneCrewDutyIndexReq) GetCrewDutyIndex() *CrewDutyIndexInfo {
	if x != nil {
		return x.CrewDutyIndex
	}
	return nil
}

// 获取详情接口输出数据结构
type GetOneCrewDutyIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewDutyIndex *CrewDutyIndexInfo `protobuf:"bytes,1,opt,name=CrewDutyIndex,proto3" json:"CrewDutyIndex"`
}

func (x *GetOneCrewDutyIndexRes) Reset() {
	*x = GetOneCrewDutyIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCrewDutyIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCrewDutyIndexRes) ProtoMessage() {}

func (x *GetOneCrewDutyIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCrewDutyIndexRes.ProtoReflect.Descriptor instead.
func (*GetOneCrewDutyIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneCrewDutyIndexRes) GetCrewDutyIndex() *CrewDutyIndexInfo {
	if x != nil {
		return x.CrewDutyIndex
	}
	return nil
}

// 列表接口输入数据结构
type GetListCrewDutyIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int32              `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size          int32              `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	CrewDutyIndex *CrewDutyIndexInfo `protobuf:"bytes,3,opt,name=CrewDutyIndex,proto3" json:"CrewDutyIndex"`
}

func (x *GetListCrewDutyIndexReq) Reset() {
	*x = GetListCrewDutyIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListCrewDutyIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListCrewDutyIndexReq) ProtoMessage() {}

func (x *GetListCrewDutyIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListCrewDutyIndexReq.ProtoReflect.Descriptor instead.
func (*GetListCrewDutyIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{5}
}

func (x *GetListCrewDutyIndexReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListCrewDutyIndexReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListCrewDutyIndexReq) GetCrewDutyIndex() *CrewDutyIndexInfo {
	if x != nil {
		return x.CrewDutyIndex
	}
	return nil
}

// 列表接口输出数据结构
type GetListCrewDutyIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32                `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size      int32                `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	TotalSize int32                `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize"`
	Data      []*CrewDutyIndexInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data"`
}

func (x *GetListCrewDutyIndexRes) Reset() {
	*x = GetListCrewDutyIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListCrewDutyIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListCrewDutyIndexRes) ProtoMessage() {}

func (x *GetListCrewDutyIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListCrewDutyIndexRes.ProtoReflect.Descriptor instead.
func (*GetListCrewDutyIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{6}
}

func (x *GetListCrewDutyIndexRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListCrewDutyIndexRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListCrewDutyIndexRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListCrewDutyIndexRes) GetData() []*CrewDutyIndexInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyCrewDutyIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark     string    `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	ScoreIndex uint32    `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`             // 职责指数
	JobLevelId uint32    `protobuf:"varint,3,opt,name=JobLevelId,proto3" json:"JobLevelId"`             // 职级ID
	Arith      ArithEnum `protobuf:"varint,4,opt,name=Arith,proto3,enum=config.ArithEnum" json:"Arith"` // 运算方式
	Id         int32     `protobuf:"varint,5,opt,name=Id,proto3" json:"Id"`                             // v: required
}

func (x *ModifyCrewDutyIndexReq) Reset() {
	*x = ModifyCrewDutyIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCrewDutyIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCrewDutyIndexReq) ProtoMessage() {}

func (x *ModifyCrewDutyIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCrewDutyIndexReq.ProtoReflect.Descriptor instead.
func (*ModifyCrewDutyIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{7}
}

func (x *ModifyCrewDutyIndexReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyCrewDutyIndexReq) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *ModifyCrewDutyIndexReq) GetJobLevelId() uint32 {
	if x != nil {
		return x.JobLevelId
	}
	return 0
}

func (x *ModifyCrewDutyIndexReq) GetArith() ArithEnum {
	if x != nil {
		return x.Arith
	}
	return ArithEnum_notSureArith
}

func (x *ModifyCrewDutyIndexReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改数据接口输出数据结构
type ModifyCrewDutyIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewDutyIndex *CrewDutyIndexInfo `protobuf:"bytes,1,opt,name=CrewDutyIndex,proto3" json:"CrewDutyIndex"`
}

func (x *ModifyCrewDutyIndexRes) Reset() {
	*x = ModifyCrewDutyIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCrewDutyIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCrewDutyIndexRes) ProtoMessage() {}

func (x *ModifyCrewDutyIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCrewDutyIndexRes.ProtoReflect.Descriptor instead.
func (*ModifyCrewDutyIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyCrewDutyIndexRes) GetCrewDutyIndex() *CrewDutyIndexInfo {
	if x != nil {
		return x.CrewDutyIndex
	}
	return nil
}

// 删除数据接口输入数据结构
type DeleteCrewDutyIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"` // v: required
}

func (x *DeleteCrewDutyIndexReq) Reset() {
	*x = DeleteCrewDutyIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrewDutyIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrewDutyIndexReq) ProtoMessage() {}

func (x *DeleteCrewDutyIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrewDutyIndexReq.ProtoReflect.Descriptor instead.
func (*DeleteCrewDutyIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCrewDutyIndexReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeleteCrewDutyIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg"`              // v: required
}

func (x *DeleteCrewDutyIndexRes) Reset() {
	*x = DeleteCrewDutyIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrewDutyIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrewDutyIndexRes) ProtoMessage() {}

func (x *DeleteCrewDutyIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_duty_index_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrewDutyIndexRes.ProtoReflect.Descriptor instead.
func (*DeleteCrewDutyIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCrewDutyIndexRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeleteCrewDutyIndexRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_config_inspirit_v1_crew_duty_index_proto protoreflect.FileDescriptor

var file_config_inspirit_v1_crew_duty_index_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x77, 0x5f, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0xe4, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4a, 0x6f,
	0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x41, 0x72, 0x69, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x41, 0x72, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x41, 0x72, 0x69, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05,
	0x41, 0x72, 0x69, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x72, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05,
	0x41, 0x72, 0x69, 0x74, 0x68, 0x22, 0x59, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12,
	0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x59, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75,
	0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x44,
	0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x43, 0x72,
	0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x59, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x44,
	0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x43, 0x72,
	0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8e, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a,
	0x16, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1e, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x05, 0x41, 0x72, 0x69, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x72, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x05, 0x41, 0x72, 0x69, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x2a, 0x50, 0x0a, 0x09, 0x41, 0x72, 0x69, 0x74, 0x68,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x53, 0x75, 0x72, 0x65, 0x41,
	0x72, 0x69, 0x74, 0x68, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x67, 0x74, 0x10, 0x01, 0x12, 0x06,
	0x0a, 0x02, 0x6c, 0x74, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x65, 0x67, 0x74, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x65, 0x6c, 0x74, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x65, 0x71, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x6e, 0x65, 0x71, 0x10, 0x06, 0x32, 0x8e, 0x03, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4a, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1e, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77,
	0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77,
	0x44, 0x75, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6a, 0x31, 0x35, 0x37, 0x30, 0x36,
	0x39, 0x33, 0x36, 0x35, 0x39, 0x2f, 0x67, 0x66, 0x63, 0x71, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_inspirit_v1_crew_duty_index_proto_rawDescOnce sync.Once
	file_config_inspirit_v1_crew_duty_index_proto_rawDescData = file_config_inspirit_v1_crew_duty_index_proto_rawDesc
)

func file_config_inspirit_v1_crew_duty_index_proto_rawDescGZIP() []byte {
	file_config_inspirit_v1_crew_duty_index_proto_rawDescOnce.Do(func() {
		file_config_inspirit_v1_crew_duty_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_inspirit_v1_crew_duty_index_proto_rawDescData)
	})
	return file_config_inspirit_v1_crew_duty_index_proto_rawDescData
}

var file_config_inspirit_v1_crew_duty_index_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_inspirit_v1_crew_duty_index_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_config_inspirit_v1_crew_duty_index_proto_goTypes = []interface{}{
	(ArithEnum)(0),                  // 0: config.ArithEnum
	(*CrewDutyIndexInfo)(nil),       // 1: config.CrewDutyIndexInfo
	(*CreateCrewDutyIndexReq)(nil),  // 2: config.CreateCrewDutyIndexReq
	(*CreateCrewDutyIndexRes)(nil),  // 3: config.CreateCrewDutyIndexRes
	(*GetOneCrewDutyIndexReq)(nil),  // 4: config.GetOneCrewDutyIndexReq
	(*GetOneCrewDutyIndexRes)(nil),  // 5: config.GetOneCrewDutyIndexRes
	(*GetListCrewDutyIndexReq)(nil), // 6: config.GetListCrewDutyIndexReq
	(*GetListCrewDutyIndexRes)(nil), // 7: config.GetListCrewDutyIndexRes
	(*ModifyCrewDutyIndexReq)(nil),  // 8: config.ModifyCrewDutyIndexReq
	(*ModifyCrewDutyIndexRes)(nil),  // 9: config.ModifyCrewDutyIndexRes
	(*DeleteCrewDutyIndexReq)(nil),  // 10: config.DeleteCrewDutyIndexReq
	(*DeleteCrewDutyIndexRes)(nil),  // 11: config.DeleteCrewDutyIndexRes
}
var file_config_inspirit_v1_crew_duty_index_proto_depIdxs = []int32{
	0,  // 0: config.CrewDutyIndexInfo.Arith:type_name -> config.ArithEnum
	0,  // 1: config.CreateCrewDutyIndexReq.Arith:type_name -> config.ArithEnum
	1,  // 2: config.CreateCrewDutyIndexRes.CrewDutyIndex:type_name -> config.CrewDutyIndexInfo
	1,  // 3: config.GetOneCrewDutyIndexReq.CrewDutyIndex:type_name -> config.CrewDutyIndexInfo
	1,  // 4: config.GetOneCrewDutyIndexRes.CrewDutyIndex:type_name -> config.CrewDutyIndexInfo
	1,  // 5: config.GetListCrewDutyIndexReq.CrewDutyIndex:type_name -> config.CrewDutyIndexInfo
	1,  // 6: config.GetListCrewDutyIndexRes.Data:type_name -> config.CrewDutyIndexInfo
	0,  // 7: config.ModifyCrewDutyIndexReq.Arith:type_name -> config.ArithEnum
	1,  // 8: config.ModifyCrewDutyIndexRes.CrewDutyIndex:type_name -> config.CrewDutyIndexInfo
	2,  // 9: config.CrewDutyIndex.Create:input_type -> config.CreateCrewDutyIndexReq
	4,  // 10: config.CrewDutyIndex.GetOne:input_type -> config.GetOneCrewDutyIndexReq
	6,  // 11: config.CrewDutyIndex.GetList:input_type -> config.GetListCrewDutyIndexReq
	8,  // 12: config.CrewDutyIndex.Modify:input_type -> config.ModifyCrewDutyIndexReq
	10, // 13: config.CrewDutyIndex.Delete:input_type -> config.DeleteCrewDutyIndexReq
	3,  // 14: config.CrewDutyIndex.Create:output_type -> config.CreateCrewDutyIndexRes
	5,  // 15: config.CrewDutyIndex.GetOne:output_type -> config.GetOneCrewDutyIndexRes
	7,  // 16: config.CrewDutyIndex.GetList:output_type -> config.GetListCrewDutyIndexRes
	9,  // 17: config.CrewDutyIndex.Modify:output_type -> config.ModifyCrewDutyIndexRes
	11, // 18: config.CrewDutyIndex.Delete:output_type -> config.DeleteCrewDutyIndexRes
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_config_inspirit_v1_crew_duty_index_proto_init() }
func file_config_inspirit_v1_crew_duty_index_proto_init() {
	if File_config_inspirit_v1_crew_duty_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrewDutyIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCrewDutyIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCrewDutyIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCrewDutyIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCrewDutyIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListCrewDutyIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListCrewDutyIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCrewDutyIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCrewDutyIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrewDutyIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_duty_index_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrewDutyIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_inspirit_v1_crew_duty_index_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_inspirit_v1_crew_duty_index_proto_goTypes,
		DependencyIndexes: file_config_inspirit_v1_crew_duty_index_proto_depIdxs,
		EnumInfos:         file_config_inspirit_v1_crew_duty_index_proto_enumTypes,
		MessageInfos:      file_config_inspirit_v1_crew_duty_index_proto_msgTypes,
	}.Build()
	File_config_inspirit_v1_crew_duty_index_proto = out.File
	file_config_inspirit_v1_crew_duty_index_proto_rawDesc = nil
	file_config_inspirit_v1_crew_duty_index_proto_goTypes = nil
	file_config_inspirit_v1_crew_duty_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrewDutyIndexClient is the client API for CrewDutyIndex service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrewDutyIndexClient interface {
	Create(ctx context.Context, in *CreateCrewDutyIndexReq, opts ...grpc.CallOption) (*CreateCrewDutyIndexRes, error)
	GetOne(ctx context.Context, in *GetOneCrewDutyIndexReq, opts ...grpc.CallOption) (*GetOneCrewDutyIndexRes, error)
	GetList(ctx context.Context, in *GetListCrewDutyIndexReq, opts ...grpc.CallOption) (*GetListCrewDutyIndexRes, error)
	Modify(ctx context.Context, in *ModifyCrewDutyIndexReq, opts ...grpc.CallOption) (*ModifyCrewDutyIndexRes, error)
	Delete(ctx context.Context, in *DeleteCrewDutyIndexReq, opts ...grpc.CallOption) (*DeleteCrewDutyIndexRes, error)
}

type crewDutyIndexClient struct {
	cc grpc.ClientConnInterface
}

func NewCrewDutyIndexClient(cc grpc.ClientConnInterface) CrewDutyIndexClient {
	return &crewDutyIndexClient{cc}
}

func (c *crewDutyIndexClient) Create(ctx context.Context, in *CreateCrewDutyIndexReq, opts ...grpc.CallOption) (*CreateCrewDutyIndexRes, error) {
	out := new(CreateCrewDutyIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewDutyIndex/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewDutyIndexClient) GetOne(ctx context.Context, in *GetOneCrewDutyIndexReq, opts ...grpc.CallOption) (*GetOneCrewDutyIndexRes, error) {
	out := new(GetOneCrewDutyIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewDutyIndex/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewDutyIndexClient) GetList(ctx context.Context, in *GetListCrewDutyIndexReq, opts ...grpc.CallOption) (*GetListCrewDutyIndexRes, error) {
	out := new(GetListCrewDutyIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewDutyIndex/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewDutyIndexClient) Modify(ctx context.Context, in *ModifyCrewDutyIndexReq, opts ...grpc.CallOption) (*ModifyCrewDutyIndexRes, error) {
	out := new(ModifyCrewDutyIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewDutyIndex/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewDutyIndexClient) Delete(ctx context.Context, in *DeleteCrewDutyIndexReq, opts ...grpc.CallOption) (*DeleteCrewDutyIndexRes, error) {
	out := new(DeleteCrewDutyIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewDutyIndex/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrewDutyIndexServer is the server API for CrewDutyIndex service.
type CrewDutyIndexServer interface {
	Create(context.Context, *CreateCrewDutyIndexReq) (*CreateCrewDutyIndexRes, error)
	GetOne(context.Context, *GetOneCrewDutyIndexReq) (*GetOneCrewDutyIndexRes, error)
	GetList(context.Context, *GetListCrewDutyIndexReq) (*GetListCrewDutyIndexRes, error)
	Modify(context.Context, *ModifyCrewDutyIndexReq) (*ModifyCrewDutyIndexRes, error)
	Delete(context.Context, *DeleteCrewDutyIndexReq) (*DeleteCrewDutyIndexRes, error)
}

// UnimplementedCrewDutyIndexServer can be embedded to have forward compatible implementations.
type UnimplementedCrewDutyIndexServer struct {
}

func (*UnimplementedCrewDutyIndexServer) Create(context.Context, *CreateCrewDutyIndexReq) (*CreateCrewDutyIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCrewDutyIndexServer) GetOne(context.Context, *GetOneCrewDutyIndexReq) (*GetOneCrewDutyIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedCrewDutyIndexServer) GetList(context.Context, *GetListCrewDutyIndexReq) (*GetListCrewDutyIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedCrewDutyIndexServer) Modify(context.Context, *ModifyCrewDutyIndexReq) (*ModifyCrewDutyIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedCrewDutyIndexServer) Delete(context.Context, *DeleteCrewDutyIndexReq) (*DeleteCrewDutyIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterCrewDutyIndexServer(s *grpc.Server, srv CrewDutyIndexServer) {
	s.RegisterService(&_CrewDutyIndex_serviceDesc, srv)
}

func _CrewDutyIndex_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCrewDutyIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewDutyIndexServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewDutyIndex/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewDutyIndexServer).Create(ctx, req.(*CreateCrewDutyIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewDutyIndex_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneCrewDutyIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewDutyIndexServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewDutyIndex/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewDutyIndexServer).GetOne(ctx, req.(*GetOneCrewDutyIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewDutyIndex_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListCrewDutyIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewDutyIndexServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewDutyIndex/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewDutyIndexServer).GetList(ctx, req.(*GetListCrewDutyIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewDutyIndex_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCrewDutyIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewDutyIndexServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewDutyIndex/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewDutyIndexServer).Modify(ctx, req.(*ModifyCrewDutyIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewDutyIndex_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCrewDutyIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewDutyIndexServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewDutyIndex/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewDutyIndexServer).Delete(ctx, req.(*DeleteCrewDutyIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CrewDutyIndex_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.CrewDutyIndex",
	HandlerType: (*CrewDutyIndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CrewDutyIndex_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _CrewDutyIndex_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _CrewDutyIndex_GetList_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _CrewDutyIndex_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CrewDutyIndex_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/inspirit/v1/crew_duty_index.proto",
}
