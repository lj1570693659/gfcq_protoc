// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: config/inspirit/v1/crew_hours_index.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	v1 "github.com/lj1570693659/gfcq_protoc/config/product/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CrewCrewHoursIndex is the golang structure for table crew_hours_index.
type CrewHoursIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	ScoreIndex uint32            `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`                            // 工时指数
	ScoreMin   float32           `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // 分值下限
	ScoreMax   float32           `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // 分值上限
	ScoreRange v1.ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // 分数区间包含关系（1：左闭右开，2：左开右闭）
	Remark     string            `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark"`                                     // 预留备注说明信息
	CreateTime string            `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime"`                             // 数据新增时间
	UpdateTime string            `protobuf:"bytes,8,opt,name=UpdateTime,proto3" json:"UpdateTime"`                             // 最后一次更新数据时间
}

func (x *CrewHoursIndexInfo) Reset() {
	*x = CrewHoursIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrewHoursIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrewHoursIndexInfo) ProtoMessage() {}

func (x *CrewHoursIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrewHoursIndexInfo.ProtoReflect.Descriptor instead.
func (*CrewHoursIndexInfo) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{0}
}

func (x *CrewHoursIndexInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrewHoursIndexInfo) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *CrewHoursIndexInfo) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *CrewHoursIndexInfo) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *CrewHoursIndexInfo) GetScoreRange() v1.ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return v1.ScoreRangeEnum(0)
}

func (x *CrewHoursIndexInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CrewHoursIndexInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CrewHoursIndexInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreateCrewHoursIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark     string            `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	ScoreIndex uint32            `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`                            // 工时指数
	ScoreMin   float32           `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // 分值下限
	ScoreMax   float32           `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // 分值上限
	ScoreRange v1.ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // 分数区间包含关系（1：左闭右开，2：左开右闭）
}

func (x *CreateCrewHoursIndexReq) Reset() {
	*x = CreateCrewHoursIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCrewHoursIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCrewHoursIndexReq) ProtoMessage() {}

func (x *CreateCrewHoursIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCrewHoursIndexReq.ProtoReflect.Descriptor instead.
func (*CreateCrewHoursIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCrewHoursIndexReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateCrewHoursIndexReq) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *CreateCrewHoursIndexReq) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *CreateCrewHoursIndexReq) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *CreateCrewHoursIndexReq) GetScoreRange() v1.ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return v1.ScoreRangeEnum(0)
}

// 创建数据接口输出数据结构
type CreateCrewHoursIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewHoursIndex *CrewHoursIndexInfo `protobuf:"bytes,1,opt,name=CrewHoursIndex,proto3" json:"CrewHoursIndex"`
}

func (x *CreateCrewHoursIndexRes) Reset() {
	*x = CreateCrewHoursIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCrewHoursIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCrewHoursIndexRes) ProtoMessage() {}

func (x *CreateCrewHoursIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCrewHoursIndexRes.ProtoReflect.Descriptor instead.
func (*CreateCrewHoursIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCrewHoursIndexRes) GetCrewHoursIndex() *CrewHoursIndexInfo {
	if x != nil {
		return x.CrewHoursIndex
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOneCrewHoursIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewHoursIndex *CrewHoursIndexInfo `protobuf:"bytes,1,opt,name=CrewHoursIndex,proto3" json:"CrewHoursIndex"`
}

func (x *GetOneCrewHoursIndexReq) Reset() {
	*x = GetOneCrewHoursIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCrewHoursIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCrewHoursIndexReq) ProtoMessage() {}

func (x *GetOneCrewHoursIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCrewHoursIndexReq.ProtoReflect.Descriptor instead.
func (*GetOneCrewHoursIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneCrewHoursIndexReq) GetCrewHoursIndex() *CrewHoursIndexInfo {
	if x != nil {
		return x.CrewHoursIndex
	}
	return nil
}

// 获取详情接口输出数据结构
type GetOneCrewHoursIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewHoursIndex *CrewHoursIndexInfo `protobuf:"bytes,1,opt,name=CrewHoursIndex,proto3" json:"CrewHoursIndex"`
}

func (x *GetOneCrewHoursIndexRes) Reset() {
	*x = GetOneCrewHoursIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCrewHoursIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCrewHoursIndexRes) ProtoMessage() {}

func (x *GetOneCrewHoursIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCrewHoursIndexRes.ProtoReflect.Descriptor instead.
func (*GetOneCrewHoursIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneCrewHoursIndexRes) GetCrewHoursIndex() *CrewHoursIndexInfo {
	if x != nil {
		return x.CrewHoursIndex
	}
	return nil
}

// 列表接口输入数据结构
type GetListCrewHoursIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int32               `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size           int32               `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	CrewHoursIndex *CrewHoursIndexInfo `protobuf:"bytes,3,opt,name=CrewHoursIndex,proto3" json:"CrewHoursIndex"`
}

func (x *GetListCrewHoursIndexReq) Reset() {
	*x = GetListCrewHoursIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListCrewHoursIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListCrewHoursIndexReq) ProtoMessage() {}

func (x *GetListCrewHoursIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListCrewHoursIndexReq.ProtoReflect.Descriptor instead.
func (*GetListCrewHoursIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{5}
}

func (x *GetListCrewHoursIndexReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListCrewHoursIndexReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListCrewHoursIndexReq) GetCrewHoursIndex() *CrewHoursIndexInfo {
	if x != nil {
		return x.CrewHoursIndex
	}
	return nil
}

// 列表接口输出数据结构
type GetListCrewHoursIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32                 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size      int32                 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	TotalSize int32                 `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize"`
	Data      []*CrewHoursIndexInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data"`
}

func (x *GetListCrewHoursIndexRes) Reset() {
	*x = GetListCrewHoursIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListCrewHoursIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListCrewHoursIndexRes) ProtoMessage() {}

func (x *GetListCrewHoursIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListCrewHoursIndexRes.ProtoReflect.Descriptor instead.
func (*GetListCrewHoursIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{6}
}

func (x *GetListCrewHoursIndexRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListCrewHoursIndexRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListCrewHoursIndexRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListCrewHoursIndexRes) GetData() []*CrewHoursIndexInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 列表接口输入数据结构
type GetAllCrewHoursIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewHoursIndex *CrewHoursIndexInfo `protobuf:"bytes,1,opt,name=CrewHoursIndex,proto3" json:"CrewHoursIndex"`
}

func (x *GetAllCrewHoursIndexReq) Reset() {
	*x = GetAllCrewHoursIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCrewHoursIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCrewHoursIndexReq) ProtoMessage() {}

func (x *GetAllCrewHoursIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCrewHoursIndexReq.ProtoReflect.Descriptor instead.
func (*GetAllCrewHoursIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllCrewHoursIndexReq) GetCrewHoursIndex() *CrewHoursIndexInfo {
	if x != nil {
		return x.CrewHoursIndex
	}
	return nil
}

// 列表接口输出数据结构
type GetAllCrewHoursIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CrewHoursIndexInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data"`
}

func (x *GetAllCrewHoursIndexRes) Reset() {
	*x = GetAllCrewHoursIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCrewHoursIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCrewHoursIndexRes) ProtoMessage() {}

func (x *GetAllCrewHoursIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCrewHoursIndexRes.ProtoReflect.Descriptor instead.
func (*GetAllCrewHoursIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllCrewHoursIndexRes) GetData() []*CrewHoursIndexInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyCrewHoursIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark     string            `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	ScoreIndex uint32            `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`                            // 工时指数
	ScoreMin   float32           `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // 分值下限
	ScoreMax   float32           `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // 分值上限
	ScoreRange v1.ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // 分数区间包含关系（1：左闭右开，2：左开右闭）
	Id         int32             `protobuf:"varint,6,opt,name=Id,proto3" json:"Id"`                                            // v: required
}

func (x *ModifyCrewHoursIndexReq) Reset() {
	*x = ModifyCrewHoursIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCrewHoursIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCrewHoursIndexReq) ProtoMessage() {}

func (x *ModifyCrewHoursIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCrewHoursIndexReq.ProtoReflect.Descriptor instead.
func (*ModifyCrewHoursIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyCrewHoursIndexReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyCrewHoursIndexReq) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *ModifyCrewHoursIndexReq) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *ModifyCrewHoursIndexReq) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *ModifyCrewHoursIndexReq) GetScoreRange() v1.ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return v1.ScoreRangeEnum(0)
}

func (x *ModifyCrewHoursIndexReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改数据接口输出数据结构
type ModifyCrewHoursIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewHoursIndex *CrewHoursIndexInfo `protobuf:"bytes,3,opt,name=CrewHoursIndex,proto3" json:"CrewHoursIndex"`
}

func (x *ModifyCrewHoursIndexRes) Reset() {
	*x = ModifyCrewHoursIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCrewHoursIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCrewHoursIndexRes) ProtoMessage() {}

func (x *ModifyCrewHoursIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCrewHoursIndexRes.ProtoReflect.Descriptor instead.
func (*ModifyCrewHoursIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyCrewHoursIndexRes) GetCrewHoursIndex() *CrewHoursIndexInfo {
	if x != nil {
		return x.CrewHoursIndex
	}
	return nil
}

// 删除数据接口输入数据结构
type DeleteCrewHoursIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"` // v: required
}

func (x *DeleteCrewHoursIndexReq) Reset() {
	*x = DeleteCrewHoursIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrewHoursIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrewHoursIndexReq) ProtoMessage() {}

func (x *DeleteCrewHoursIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrewHoursIndexReq.ProtoReflect.Descriptor instead.
func (*DeleteCrewHoursIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCrewHoursIndexReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeleteCrewHoursIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg"`              // v: required
}

func (x *DeleteCrewHoursIndexRes) Reset() {
	*x = DeleteCrewHoursIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrewHoursIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrewHoursIndexRes) ProtoMessage() {}

func (x *DeleteCrewHoursIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_hours_index_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrewHoursIndexRes.ProtoReflect.Descriptor instead.
func (*DeleteCrewHoursIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteCrewHoursIndexRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeleteCrewHoursIndexRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_config_inspirit_v1_crew_hours_index_proto protoreflect.FileDescriptor

var file_config_inspirit_v1_crew_hours_index_proto_rawDesc = []byte{
	0x0a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x77, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x25, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x5d, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x77,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72,
	0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5d, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72, 0x65,
	0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5d, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72, 0x65, 0x77,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xd1, 0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x36, 0x0a, 0x0a,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72,
	0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12,
	0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x49,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x32, 0xe7, 0x03, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4c, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x6a, 0x31, 0x35, 0x37, 0x30, 0x36, 0x39, 0x33, 0x36, 0x35, 0x39, 0x2f, 0x67,
	0x66, 0x63, 0x71, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_inspirit_v1_crew_hours_index_proto_rawDescOnce sync.Once
	file_config_inspirit_v1_crew_hours_index_proto_rawDescData = file_config_inspirit_v1_crew_hours_index_proto_rawDesc
)

func file_config_inspirit_v1_crew_hours_index_proto_rawDescGZIP() []byte {
	file_config_inspirit_v1_crew_hours_index_proto_rawDescOnce.Do(func() {
		file_config_inspirit_v1_crew_hours_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_inspirit_v1_crew_hours_index_proto_rawDescData)
	})
	return file_config_inspirit_v1_crew_hours_index_proto_rawDescData
}

var file_config_inspirit_v1_crew_hours_index_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_config_inspirit_v1_crew_hours_index_proto_goTypes = []interface{}{
	(*CrewHoursIndexInfo)(nil),       // 0: config.CrewHoursIndexInfo
	(*CreateCrewHoursIndexReq)(nil),  // 1: config.CreateCrewHoursIndexReq
	(*CreateCrewHoursIndexRes)(nil),  // 2: config.CreateCrewHoursIndexRes
	(*GetOneCrewHoursIndexReq)(nil),  // 3: config.GetOneCrewHoursIndexReq
	(*GetOneCrewHoursIndexRes)(nil),  // 4: config.GetOneCrewHoursIndexRes
	(*GetListCrewHoursIndexReq)(nil), // 5: config.GetListCrewHoursIndexReq
	(*GetListCrewHoursIndexRes)(nil), // 6: config.GetListCrewHoursIndexRes
	(*GetAllCrewHoursIndexReq)(nil),  // 7: config.GetAllCrewHoursIndexReq
	(*GetAllCrewHoursIndexRes)(nil),  // 8: config.GetAllCrewHoursIndexRes
	(*ModifyCrewHoursIndexReq)(nil),  // 9: config.ModifyCrewHoursIndexReq
	(*ModifyCrewHoursIndexRes)(nil),  // 10: config.ModifyCrewHoursIndexRes
	(*DeleteCrewHoursIndexReq)(nil),  // 11: config.DeleteCrewHoursIndexReq
	(*DeleteCrewHoursIndexRes)(nil),  // 12: config.DeleteCrewHoursIndexRes
	(v1.ScoreRangeEnum)(0),           // 13: config.ScoreRangeEnum
}
var file_config_inspirit_v1_crew_hours_index_proto_depIdxs = []int32{
	13, // 0: config.CrewHoursIndexInfo.ScoreRange:type_name -> config.ScoreRangeEnum
	13, // 1: config.CreateCrewHoursIndexReq.ScoreRange:type_name -> config.ScoreRangeEnum
	0,  // 2: config.CreateCrewHoursIndexRes.CrewHoursIndex:type_name -> config.CrewHoursIndexInfo
	0,  // 3: config.GetOneCrewHoursIndexReq.CrewHoursIndex:type_name -> config.CrewHoursIndexInfo
	0,  // 4: config.GetOneCrewHoursIndexRes.CrewHoursIndex:type_name -> config.CrewHoursIndexInfo
	0,  // 5: config.GetListCrewHoursIndexReq.CrewHoursIndex:type_name -> config.CrewHoursIndexInfo
	0,  // 6: config.GetListCrewHoursIndexRes.Data:type_name -> config.CrewHoursIndexInfo
	0,  // 7: config.GetAllCrewHoursIndexReq.CrewHoursIndex:type_name -> config.CrewHoursIndexInfo
	0,  // 8: config.GetAllCrewHoursIndexRes.Data:type_name -> config.CrewHoursIndexInfo
	13, // 9: config.ModifyCrewHoursIndexReq.ScoreRange:type_name -> config.ScoreRangeEnum
	0,  // 10: config.ModifyCrewHoursIndexRes.CrewHoursIndex:type_name -> config.CrewHoursIndexInfo
	1,  // 11: config.CrewHoursIndex.Create:input_type -> config.CreateCrewHoursIndexReq
	3,  // 12: config.CrewHoursIndex.GetOne:input_type -> config.GetOneCrewHoursIndexReq
	5,  // 13: config.CrewHoursIndex.GetList:input_type -> config.GetListCrewHoursIndexReq
	7,  // 14: config.CrewHoursIndex.GetAll:input_type -> config.GetAllCrewHoursIndexReq
	9,  // 15: config.CrewHoursIndex.Modify:input_type -> config.ModifyCrewHoursIndexReq
	11, // 16: config.CrewHoursIndex.Delete:input_type -> config.DeleteCrewHoursIndexReq
	2,  // 17: config.CrewHoursIndex.Create:output_type -> config.CreateCrewHoursIndexRes
	4,  // 18: config.CrewHoursIndex.GetOne:output_type -> config.GetOneCrewHoursIndexRes
	6,  // 19: config.CrewHoursIndex.GetList:output_type -> config.GetListCrewHoursIndexRes
	8,  // 20: config.CrewHoursIndex.GetAll:output_type -> config.GetAllCrewHoursIndexRes
	10, // 21: config.CrewHoursIndex.Modify:output_type -> config.ModifyCrewHoursIndexRes
	12, // 22: config.CrewHoursIndex.Delete:output_type -> config.DeleteCrewHoursIndexRes
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_config_inspirit_v1_crew_hours_index_proto_init() }
func file_config_inspirit_v1_crew_hours_index_proto_init() {
	if File_config_inspirit_v1_crew_hours_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrewHoursIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCrewHoursIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCrewHoursIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCrewHoursIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCrewHoursIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListCrewHoursIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListCrewHoursIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCrewHoursIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCrewHoursIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCrewHoursIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCrewHoursIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrewHoursIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_hours_index_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrewHoursIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_inspirit_v1_crew_hours_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_inspirit_v1_crew_hours_index_proto_goTypes,
		DependencyIndexes: file_config_inspirit_v1_crew_hours_index_proto_depIdxs,
		MessageInfos:      file_config_inspirit_v1_crew_hours_index_proto_msgTypes,
	}.Build()
	File_config_inspirit_v1_crew_hours_index_proto = out.File
	file_config_inspirit_v1_crew_hours_index_proto_rawDesc = nil
	file_config_inspirit_v1_crew_hours_index_proto_goTypes = nil
	file_config_inspirit_v1_crew_hours_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrewHoursIndexClient is the client API for CrewHoursIndex service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrewHoursIndexClient interface {
	Create(ctx context.Context, in *CreateCrewHoursIndexReq, opts ...grpc.CallOption) (*CreateCrewHoursIndexRes, error)
	GetOne(ctx context.Context, in *GetOneCrewHoursIndexReq, opts ...grpc.CallOption) (*GetOneCrewHoursIndexRes, error)
	GetList(ctx context.Context, in *GetListCrewHoursIndexReq, opts ...grpc.CallOption) (*GetListCrewHoursIndexRes, error)
	GetAll(ctx context.Context, in *GetAllCrewHoursIndexReq, opts ...grpc.CallOption) (*GetAllCrewHoursIndexRes, error)
	Modify(ctx context.Context, in *ModifyCrewHoursIndexReq, opts ...grpc.CallOption) (*ModifyCrewHoursIndexRes, error)
	Delete(ctx context.Context, in *DeleteCrewHoursIndexReq, opts ...grpc.CallOption) (*DeleteCrewHoursIndexRes, error)
}

type crewHoursIndexClient struct {
	cc grpc.ClientConnInterface
}

func NewCrewHoursIndexClient(cc grpc.ClientConnInterface) CrewHoursIndexClient {
	return &crewHoursIndexClient{cc}
}

func (c *crewHoursIndexClient) Create(ctx context.Context, in *CreateCrewHoursIndexReq, opts ...grpc.CallOption) (*CreateCrewHoursIndexRes, error) {
	out := new(CreateCrewHoursIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewHoursIndex/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewHoursIndexClient) GetOne(ctx context.Context, in *GetOneCrewHoursIndexReq, opts ...grpc.CallOption) (*GetOneCrewHoursIndexRes, error) {
	out := new(GetOneCrewHoursIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewHoursIndex/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewHoursIndexClient) GetList(ctx context.Context, in *GetListCrewHoursIndexReq, opts ...grpc.CallOption) (*GetListCrewHoursIndexRes, error) {
	out := new(GetListCrewHoursIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewHoursIndex/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewHoursIndexClient) GetAll(ctx context.Context, in *GetAllCrewHoursIndexReq, opts ...grpc.CallOption) (*GetAllCrewHoursIndexRes, error) {
	out := new(GetAllCrewHoursIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewHoursIndex/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewHoursIndexClient) Modify(ctx context.Context, in *ModifyCrewHoursIndexReq, opts ...grpc.CallOption) (*ModifyCrewHoursIndexRes, error) {
	out := new(ModifyCrewHoursIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewHoursIndex/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewHoursIndexClient) Delete(ctx context.Context, in *DeleteCrewHoursIndexReq, opts ...grpc.CallOption) (*DeleteCrewHoursIndexRes, error) {
	out := new(DeleteCrewHoursIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewHoursIndex/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrewHoursIndexServer is the server API for CrewHoursIndex service.
type CrewHoursIndexServer interface {
	Create(context.Context, *CreateCrewHoursIndexReq) (*CreateCrewHoursIndexRes, error)
	GetOne(context.Context, *GetOneCrewHoursIndexReq) (*GetOneCrewHoursIndexRes, error)
	GetList(context.Context, *GetListCrewHoursIndexReq) (*GetListCrewHoursIndexRes, error)
	GetAll(context.Context, *GetAllCrewHoursIndexReq) (*GetAllCrewHoursIndexRes, error)
	Modify(context.Context, *ModifyCrewHoursIndexReq) (*ModifyCrewHoursIndexRes, error)
	Delete(context.Context, *DeleteCrewHoursIndexReq) (*DeleteCrewHoursIndexRes, error)
}

// UnimplementedCrewHoursIndexServer can be embedded to have forward compatible implementations.
type UnimplementedCrewHoursIndexServer struct {
}

func (*UnimplementedCrewHoursIndexServer) Create(context.Context, *CreateCrewHoursIndexReq) (*CreateCrewHoursIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCrewHoursIndexServer) GetOne(context.Context, *GetOneCrewHoursIndexReq) (*GetOneCrewHoursIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedCrewHoursIndexServer) GetList(context.Context, *GetListCrewHoursIndexReq) (*GetListCrewHoursIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedCrewHoursIndexServer) GetAll(context.Context, *GetAllCrewHoursIndexReq) (*GetAllCrewHoursIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedCrewHoursIndexServer) Modify(context.Context, *ModifyCrewHoursIndexReq) (*ModifyCrewHoursIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedCrewHoursIndexServer) Delete(context.Context, *DeleteCrewHoursIndexReq) (*DeleteCrewHoursIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterCrewHoursIndexServer(s *grpc.Server, srv CrewHoursIndexServer) {
	s.RegisterService(&_CrewHoursIndex_serviceDesc, srv)
}

func _CrewHoursIndex_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCrewHoursIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewHoursIndexServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewHoursIndex/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewHoursIndexServer).Create(ctx, req.(*CreateCrewHoursIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewHoursIndex_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneCrewHoursIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewHoursIndexServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewHoursIndex/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewHoursIndexServer).GetOne(ctx, req.(*GetOneCrewHoursIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewHoursIndex_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListCrewHoursIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewHoursIndexServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewHoursIndex/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewHoursIndexServer).GetList(ctx, req.(*GetListCrewHoursIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewHoursIndex_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCrewHoursIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewHoursIndexServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewHoursIndex/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewHoursIndexServer).GetAll(ctx, req.(*GetAllCrewHoursIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewHoursIndex_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCrewHoursIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewHoursIndexServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewHoursIndex/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewHoursIndexServer).Modify(ctx, req.(*ModifyCrewHoursIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewHoursIndex_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCrewHoursIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewHoursIndexServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewHoursIndex/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewHoursIndexServer).Delete(ctx, req.(*DeleteCrewHoursIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CrewHoursIndex_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.CrewHoursIndex",
	HandlerType: (*CrewHoursIndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CrewHoursIndex_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _CrewHoursIndex_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _CrewHoursIndex_GetList_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _CrewHoursIndex_GetAll_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _CrewHoursIndex_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CrewHoursIndex_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/inspirit/v1/crew_hours_index.proto",
}
