// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: config/inspirit/v1/crew_manage_index.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CrewManageIndex is the golang structure for table crew_manage_index.
type CrewManageIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	ScoreIndex    uint32 `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`       // 管理指数
	ProductRoleId uint32 `protobuf:"varint,3,opt,name=ProductRoleId,proto3" json:"ProductRoleId"` // 项目角色ID
	Remark        string `protobuf:"bytes,4,opt,name=Remark,proto3" json:"Remark"`                // 预留备注说明信息
	CreateTime    string `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime"`        // 数据新增时间
	UpdateTime    string `protobuf:"bytes,6,opt,name=UpdateTime,proto3" json:"UpdateTime"`        // 最后一次更新数据时间
}

func (x *CrewManageIndexInfo) Reset() {
	*x = CrewManageIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrewManageIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrewManageIndexInfo) ProtoMessage() {}

func (x *CrewManageIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrewManageIndexInfo.ProtoReflect.Descriptor instead.
func (*CrewManageIndexInfo) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{0}
}

func (x *CrewManageIndexInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrewManageIndexInfo) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *CrewManageIndexInfo) GetProductRoleId() uint32 {
	if x != nil {
		return x.ProductRoleId
	}
	return 0
}

func (x *CrewManageIndexInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CrewManageIndexInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CrewManageIndexInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreateCrewManageIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark        string `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	ScoreIndex    uint32 `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`       // 管理指数
	ProductRoleId uint32 `protobuf:"varint,3,opt,name=ProductRoleId,proto3" json:"ProductRoleId"` // 项目角色ID
}

func (x *CreateCrewManageIndexReq) Reset() {
	*x = CreateCrewManageIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCrewManageIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCrewManageIndexReq) ProtoMessage() {}

func (x *CreateCrewManageIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCrewManageIndexReq.ProtoReflect.Descriptor instead.
func (*CreateCrewManageIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCrewManageIndexReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateCrewManageIndexReq) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *CreateCrewManageIndexReq) GetProductRoleId() uint32 {
	if x != nil {
		return x.ProductRoleId
	}
	return 0
}

// 创建数据接口输出数据结构
type CreateCrewManageIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewManageIndex *CrewManageIndexInfo `protobuf:"bytes,1,opt,name=CrewManageIndex,proto3" json:"CrewManageIndex"`
}

func (x *CreateCrewManageIndexRes) Reset() {
	*x = CreateCrewManageIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCrewManageIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCrewManageIndexRes) ProtoMessage() {}

func (x *CreateCrewManageIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCrewManageIndexRes.ProtoReflect.Descriptor instead.
func (*CreateCrewManageIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCrewManageIndexRes) GetCrewManageIndex() *CrewManageIndexInfo {
	if x != nil {
		return x.CrewManageIndex
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOneCrewManageIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewManageIndex *CrewManageIndexInfo `protobuf:"bytes,1,opt,name=CrewManageIndex,proto3" json:"CrewManageIndex"`
}

func (x *GetOneCrewManageIndexReq) Reset() {
	*x = GetOneCrewManageIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCrewManageIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCrewManageIndexReq) ProtoMessage() {}

func (x *GetOneCrewManageIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCrewManageIndexReq.ProtoReflect.Descriptor instead.
func (*GetOneCrewManageIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneCrewManageIndexReq) GetCrewManageIndex() *CrewManageIndexInfo {
	if x != nil {
		return x.CrewManageIndex
	}
	return nil
}

// 获取详情接口输出数据结构
type GetOneCrewManageIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewManageIndex *CrewManageIndexInfo `protobuf:"bytes,1,opt,name=CrewManageIndex,proto3" json:"CrewManageIndex"`
}

func (x *GetOneCrewManageIndexRes) Reset() {
	*x = GetOneCrewManageIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCrewManageIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCrewManageIndexRes) ProtoMessage() {}

func (x *GetOneCrewManageIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCrewManageIndexRes.ProtoReflect.Descriptor instead.
func (*GetOneCrewManageIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneCrewManageIndexRes) GetCrewManageIndex() *CrewManageIndexInfo {
	if x != nil {
		return x.CrewManageIndex
	}
	return nil
}

// 列表接口输入数据结构
type GetListCrewManageIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page            int32                `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size            int32                `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	CrewManageIndex *CrewManageIndexInfo `protobuf:"bytes,3,opt,name=CrewManageIndex,proto3" json:"CrewManageIndex"`
}

func (x *GetListCrewManageIndexReq) Reset() {
	*x = GetListCrewManageIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListCrewManageIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListCrewManageIndexReq) ProtoMessage() {}

func (x *GetListCrewManageIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListCrewManageIndexReq.ProtoReflect.Descriptor instead.
func (*GetListCrewManageIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{5}
}

func (x *GetListCrewManageIndexReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListCrewManageIndexReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListCrewManageIndexReq) GetCrewManageIndex() *CrewManageIndexInfo {
	if x != nil {
		return x.CrewManageIndex
	}
	return nil
}

// 列表接口输出数据结构
type GetListCrewManageIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32                  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size      int32                  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	TotalSize int32                  `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize"`
	Data      []*CrewManageIndexInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data"`
}

func (x *GetListCrewManageIndexRes) Reset() {
	*x = GetListCrewManageIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListCrewManageIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListCrewManageIndexRes) ProtoMessage() {}

func (x *GetListCrewManageIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListCrewManageIndexRes.ProtoReflect.Descriptor instead.
func (*GetListCrewManageIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{6}
}

func (x *GetListCrewManageIndexRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListCrewManageIndexRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListCrewManageIndexRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListCrewManageIndexRes) GetData() []*CrewManageIndexInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyCrewManageIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark        string `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	ScoreIndex    uint32 `protobuf:"varint,2,opt,name=ScoreIndex,proto3" json:"ScoreIndex"`       // 管理指数
	ProductRoleId uint32 `protobuf:"varint,3,opt,name=ProductRoleId,proto3" json:"ProductRoleId"` // 项目角色ID
	Id            int32  `protobuf:"varint,4,opt,name=Id,proto3" json:"Id"`                       // v: required
}

func (x *ModifyCrewManageIndexReq) Reset() {
	*x = ModifyCrewManageIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCrewManageIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCrewManageIndexReq) ProtoMessage() {}

func (x *ModifyCrewManageIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCrewManageIndexReq.ProtoReflect.Descriptor instead.
func (*ModifyCrewManageIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{7}
}

func (x *ModifyCrewManageIndexReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyCrewManageIndexReq) GetScoreIndex() uint32 {
	if x != nil {
		return x.ScoreIndex
	}
	return 0
}

func (x *ModifyCrewManageIndexReq) GetProductRoleId() uint32 {
	if x != nil {
		return x.ProductRoleId
	}
	return 0
}

func (x *ModifyCrewManageIndexReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改数据接口输出数据结构
type ModifyCrewManageIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrewManageIndex *CrewManageIndexInfo `protobuf:"bytes,3,opt,name=CrewManageIndex,proto3" json:"CrewManageIndex"`
}

func (x *ModifyCrewManageIndexRes) Reset() {
	*x = ModifyCrewManageIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCrewManageIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCrewManageIndexRes) ProtoMessage() {}

func (x *ModifyCrewManageIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCrewManageIndexRes.ProtoReflect.Descriptor instead.
func (*ModifyCrewManageIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyCrewManageIndexRes) GetCrewManageIndex() *CrewManageIndexInfo {
	if x != nil {
		return x.CrewManageIndex
	}
	return nil
}

// 删除数据接口输入数据结构
type DeleteCrewManageIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"` // v: required
}

func (x *DeleteCrewManageIndexReq) Reset() {
	*x = DeleteCrewManageIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrewManageIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrewManageIndexReq) ProtoMessage() {}

func (x *DeleteCrewManageIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrewManageIndexReq.ProtoReflect.Descriptor instead.
func (*DeleteCrewManageIndexReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCrewManageIndexReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeleteCrewManageIndexRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg"`              // v: required
}

func (x *DeleteCrewManageIndexRes) Reset() {
	*x = DeleteCrewManageIndexRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrewManageIndexRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrewManageIndexRes) ProtoMessage() {}

func (x *DeleteCrewManageIndexRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_crew_manage_index_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrewManageIndexRes.ProtoReflect.Descriptor instead.
func (*DeleteCrewManageIndexRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCrewManageIndexRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeleteCrewManageIndexRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_config_inspirit_v1_crew_manage_index_proto protoreflect.FileDescriptor

var file_config_inspirit_v1_crew_manage_index_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x77, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x12, 0x45, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x61, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x61, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x43, 0x72,
	0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8a, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x88, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x43, 0x72,
	0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x2a, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x32, 0xa4, 0x03, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4e, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x77, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6a, 0x31, 0x35, 0x37,
	0x30, 0x36, 0x39, 0x33, 0x36, 0x35, 0x39, 0x2f, 0x67, 0x66, 0x63, 0x71, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_inspirit_v1_crew_manage_index_proto_rawDescOnce sync.Once
	file_config_inspirit_v1_crew_manage_index_proto_rawDescData = file_config_inspirit_v1_crew_manage_index_proto_rawDesc
)

func file_config_inspirit_v1_crew_manage_index_proto_rawDescGZIP() []byte {
	file_config_inspirit_v1_crew_manage_index_proto_rawDescOnce.Do(func() {
		file_config_inspirit_v1_crew_manage_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_inspirit_v1_crew_manage_index_proto_rawDescData)
	})
	return file_config_inspirit_v1_crew_manage_index_proto_rawDescData
}

var file_config_inspirit_v1_crew_manage_index_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_config_inspirit_v1_crew_manage_index_proto_goTypes = []interface{}{
	(*CrewManageIndexInfo)(nil),       // 0: config.CrewManageIndexInfo
	(*CreateCrewManageIndexReq)(nil),  // 1: config.CreateCrewManageIndexReq
	(*CreateCrewManageIndexRes)(nil),  // 2: config.CreateCrewManageIndexRes
	(*GetOneCrewManageIndexReq)(nil),  // 3: config.GetOneCrewManageIndexReq
	(*GetOneCrewManageIndexRes)(nil),  // 4: config.GetOneCrewManageIndexRes
	(*GetListCrewManageIndexReq)(nil), // 5: config.GetListCrewManageIndexReq
	(*GetListCrewManageIndexRes)(nil), // 6: config.GetListCrewManageIndexRes
	(*ModifyCrewManageIndexReq)(nil),  // 7: config.ModifyCrewManageIndexReq
	(*ModifyCrewManageIndexRes)(nil),  // 8: config.ModifyCrewManageIndexRes
	(*DeleteCrewManageIndexReq)(nil),  // 9: config.DeleteCrewManageIndexReq
	(*DeleteCrewManageIndexRes)(nil),  // 10: config.DeleteCrewManageIndexRes
}
var file_config_inspirit_v1_crew_manage_index_proto_depIdxs = []int32{
	0,  // 0: config.CreateCrewManageIndexRes.CrewManageIndex:type_name -> config.CrewManageIndexInfo
	0,  // 1: config.GetOneCrewManageIndexReq.CrewManageIndex:type_name -> config.CrewManageIndexInfo
	0,  // 2: config.GetOneCrewManageIndexRes.CrewManageIndex:type_name -> config.CrewManageIndexInfo
	0,  // 3: config.GetListCrewManageIndexReq.CrewManageIndex:type_name -> config.CrewManageIndexInfo
	0,  // 4: config.GetListCrewManageIndexRes.Data:type_name -> config.CrewManageIndexInfo
	0,  // 5: config.ModifyCrewManageIndexRes.CrewManageIndex:type_name -> config.CrewManageIndexInfo
	1,  // 6: config.CrewManageIndex.Create:input_type -> config.CreateCrewManageIndexReq
	3,  // 7: config.CrewManageIndex.GetOne:input_type -> config.GetOneCrewManageIndexReq
	5,  // 8: config.CrewManageIndex.GetList:input_type -> config.GetListCrewManageIndexReq
	7,  // 9: config.CrewManageIndex.Modify:input_type -> config.ModifyCrewManageIndexReq
	9,  // 10: config.CrewManageIndex.Delete:input_type -> config.DeleteCrewManageIndexReq
	2,  // 11: config.CrewManageIndex.Create:output_type -> config.CreateCrewManageIndexRes
	4,  // 12: config.CrewManageIndex.GetOne:output_type -> config.GetOneCrewManageIndexRes
	6,  // 13: config.CrewManageIndex.GetList:output_type -> config.GetListCrewManageIndexRes
	8,  // 14: config.CrewManageIndex.Modify:output_type -> config.ModifyCrewManageIndexRes
	10, // 15: config.CrewManageIndex.Delete:output_type -> config.DeleteCrewManageIndexRes
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_config_inspirit_v1_crew_manage_index_proto_init() }
func file_config_inspirit_v1_crew_manage_index_proto_init() {
	if File_config_inspirit_v1_crew_manage_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrewManageIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCrewManageIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCrewManageIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCrewManageIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCrewManageIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListCrewManageIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListCrewManageIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCrewManageIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCrewManageIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrewManageIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_crew_manage_index_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrewManageIndexRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_inspirit_v1_crew_manage_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_inspirit_v1_crew_manage_index_proto_goTypes,
		DependencyIndexes: file_config_inspirit_v1_crew_manage_index_proto_depIdxs,
		MessageInfos:      file_config_inspirit_v1_crew_manage_index_proto_msgTypes,
	}.Build()
	File_config_inspirit_v1_crew_manage_index_proto = out.File
	file_config_inspirit_v1_crew_manage_index_proto_rawDesc = nil
	file_config_inspirit_v1_crew_manage_index_proto_goTypes = nil
	file_config_inspirit_v1_crew_manage_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrewManageIndexClient is the client API for CrewManageIndex service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrewManageIndexClient interface {
	Create(ctx context.Context, in *CreateCrewManageIndexReq, opts ...grpc.CallOption) (*CreateCrewManageIndexRes, error)
	GetOne(ctx context.Context, in *GetOneCrewManageIndexReq, opts ...grpc.CallOption) (*GetOneCrewManageIndexRes, error)
	GetList(ctx context.Context, in *GetListCrewManageIndexReq, opts ...grpc.CallOption) (*GetListCrewManageIndexRes, error)
	Modify(ctx context.Context, in *ModifyCrewManageIndexReq, opts ...grpc.CallOption) (*ModifyCrewManageIndexRes, error)
	Delete(ctx context.Context, in *DeleteCrewManageIndexReq, opts ...grpc.CallOption) (*DeleteCrewManageIndexRes, error)
}

type crewManageIndexClient struct {
	cc grpc.ClientConnInterface
}

func NewCrewManageIndexClient(cc grpc.ClientConnInterface) CrewManageIndexClient {
	return &crewManageIndexClient{cc}
}

func (c *crewManageIndexClient) Create(ctx context.Context, in *CreateCrewManageIndexReq, opts ...grpc.CallOption) (*CreateCrewManageIndexRes, error) {
	out := new(CreateCrewManageIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewManageIndex/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewManageIndexClient) GetOne(ctx context.Context, in *GetOneCrewManageIndexReq, opts ...grpc.CallOption) (*GetOneCrewManageIndexRes, error) {
	out := new(GetOneCrewManageIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewManageIndex/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewManageIndexClient) GetList(ctx context.Context, in *GetListCrewManageIndexReq, opts ...grpc.CallOption) (*GetListCrewManageIndexRes, error) {
	out := new(GetListCrewManageIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewManageIndex/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewManageIndexClient) Modify(ctx context.Context, in *ModifyCrewManageIndexReq, opts ...grpc.CallOption) (*ModifyCrewManageIndexRes, error) {
	out := new(ModifyCrewManageIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewManageIndex/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crewManageIndexClient) Delete(ctx context.Context, in *DeleteCrewManageIndexReq, opts ...grpc.CallOption) (*DeleteCrewManageIndexRes, error) {
	out := new(DeleteCrewManageIndexRes)
	err := c.cc.Invoke(ctx, "/config.CrewManageIndex/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrewManageIndexServer is the server API for CrewManageIndex service.
type CrewManageIndexServer interface {
	Create(context.Context, *CreateCrewManageIndexReq) (*CreateCrewManageIndexRes, error)
	GetOne(context.Context, *GetOneCrewManageIndexReq) (*GetOneCrewManageIndexRes, error)
	GetList(context.Context, *GetListCrewManageIndexReq) (*GetListCrewManageIndexRes, error)
	Modify(context.Context, *ModifyCrewManageIndexReq) (*ModifyCrewManageIndexRes, error)
	Delete(context.Context, *DeleteCrewManageIndexReq) (*DeleteCrewManageIndexRes, error)
}

// UnimplementedCrewManageIndexServer can be embedded to have forward compatible implementations.
type UnimplementedCrewManageIndexServer struct {
}

func (*UnimplementedCrewManageIndexServer) Create(context.Context, *CreateCrewManageIndexReq) (*CreateCrewManageIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCrewManageIndexServer) GetOne(context.Context, *GetOneCrewManageIndexReq) (*GetOneCrewManageIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedCrewManageIndexServer) GetList(context.Context, *GetListCrewManageIndexReq) (*GetListCrewManageIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedCrewManageIndexServer) Modify(context.Context, *ModifyCrewManageIndexReq) (*ModifyCrewManageIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedCrewManageIndexServer) Delete(context.Context, *DeleteCrewManageIndexReq) (*DeleteCrewManageIndexRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterCrewManageIndexServer(s *grpc.Server, srv CrewManageIndexServer) {
	s.RegisterService(&_CrewManageIndex_serviceDesc, srv)
}

func _CrewManageIndex_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCrewManageIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewManageIndexServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewManageIndex/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewManageIndexServer).Create(ctx, req.(*CreateCrewManageIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewManageIndex_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneCrewManageIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewManageIndexServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewManageIndex/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewManageIndexServer).GetOne(ctx, req.(*GetOneCrewManageIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewManageIndex_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListCrewManageIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewManageIndexServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewManageIndex/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewManageIndexServer).GetList(ctx, req.(*GetListCrewManageIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewManageIndex_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCrewManageIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewManageIndexServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewManageIndex/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewManageIndexServer).Modify(ctx, req.(*ModifyCrewManageIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrewManageIndex_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCrewManageIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrewManageIndexServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.CrewManageIndex/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrewManageIndexServer).Delete(ctx, req.(*DeleteCrewManageIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CrewManageIndex_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.CrewManageIndex",
	HandlerType: (*CrewManageIndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CrewManageIndex_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _CrewManageIndex_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _CrewManageIndex_GetList_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _CrewManageIndex_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CrewManageIndex_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/inspirit/v1/crew_manage_index.proto",
}
