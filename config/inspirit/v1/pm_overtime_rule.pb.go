// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: config/inspirit/v1/pm_overtime_rule.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	v1 "github.com/lj1570693659/gfcq_protoc/config/product/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PmOvertimeRule is the golang structure for table Pm_overtime_rule.
type PmOvertimeRuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	Redio      float32           `protobuf:"fixed32,2,opt,name=Redio,proto3" json:"Redio"`                                     // 浮动比例
	ScoreMin   float32           `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // 分值下限
	ScoreMax   float32           `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // 分值上限
	ScoreRange v1.ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // 分数区间包含关系（1：左闭右开，2：左开右闭）
	Remark     string            `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark"`                                     // 预留备注说明信息
	CreateTime string            `protobuf:"bytes,7,opt,name=CreateTime,proto3" json:"CreateTime"`                             // 数据新增时间
	UpdateTime string            `protobuf:"bytes,8,opt,name=UpdateTime,proto3" json:"UpdateTime"`                             // 最后一次更新数据时间
}

func (x *PmOvertimeRuleInfo) Reset() {
	*x = PmOvertimeRuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmOvertimeRuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmOvertimeRuleInfo) ProtoMessage() {}

func (x *PmOvertimeRuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmOvertimeRuleInfo.ProtoReflect.Descriptor instead.
func (*PmOvertimeRuleInfo) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{0}
}

func (x *PmOvertimeRuleInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PmOvertimeRuleInfo) GetRedio() float32 {
	if x != nil {
		return x.Redio
	}
	return 0
}

func (x *PmOvertimeRuleInfo) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *PmOvertimeRuleInfo) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *PmOvertimeRuleInfo) GetScoreRange() v1.ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return v1.ScoreRangeEnum(0)
}

func (x *PmOvertimeRuleInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PmOvertimeRuleInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PmOvertimeRuleInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreatePmOvertimeRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark     string            `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	Redio      float32           `protobuf:"fixed32,2,opt,name=Redio,proto3" json:"Redio"`                                     // 浮动比例
	ScoreMin   float32           `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // 分值下限
	ScoreMax   float32           `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // 分值上限
	ScoreRange v1.ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // 分数区间包含关系（1：左闭右开，2：左开右闭）
}

func (x *CreatePmOvertimeRuleReq) Reset() {
	*x = CreatePmOvertimeRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePmOvertimeRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePmOvertimeRuleReq) ProtoMessage() {}

func (x *CreatePmOvertimeRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePmOvertimeRuleReq.ProtoReflect.Descriptor instead.
func (*CreatePmOvertimeRuleReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePmOvertimeRuleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreatePmOvertimeRuleReq) GetRedio() float32 {
	if x != nil {
		return x.Redio
	}
	return 0
}

func (x *CreatePmOvertimeRuleReq) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *CreatePmOvertimeRuleReq) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *CreatePmOvertimeRuleReq) GetScoreRange() v1.ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return v1.ScoreRangeEnum(0)
}

// 创建数据接口输出数据结构
type CreatePmOvertimeRuleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmOvertimeRule *PmOvertimeRuleInfo `protobuf:"bytes,1,opt,name=PmOvertimeRule,proto3" json:"PmOvertimeRule"`
}

func (x *CreatePmOvertimeRuleRes) Reset() {
	*x = CreatePmOvertimeRuleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePmOvertimeRuleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePmOvertimeRuleRes) ProtoMessage() {}

func (x *CreatePmOvertimeRuleRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePmOvertimeRuleRes.ProtoReflect.Descriptor instead.
func (*CreatePmOvertimeRuleRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePmOvertimeRuleRes) GetPmOvertimeRule() *PmOvertimeRuleInfo {
	if x != nil {
		return x.PmOvertimeRule
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOnePmOvertimeRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmOvertimeRule *PmOvertimeRuleInfo `protobuf:"bytes,1,opt,name=PmOvertimeRule,proto3" json:"PmOvertimeRule"`
}

func (x *GetOnePmOvertimeRuleReq) Reset() {
	*x = GetOnePmOvertimeRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnePmOvertimeRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnePmOvertimeRuleReq) ProtoMessage() {}

func (x *GetOnePmOvertimeRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnePmOvertimeRuleReq.ProtoReflect.Descriptor instead.
func (*GetOnePmOvertimeRuleReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{3}
}

func (x *GetOnePmOvertimeRuleReq) GetPmOvertimeRule() *PmOvertimeRuleInfo {
	if x != nil {
		return x.PmOvertimeRule
	}
	return nil
}

// 获取详情接口输出数据结构
type GetOnePmOvertimeRuleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmOvertimeRule *PmOvertimeRuleInfo `protobuf:"bytes,1,opt,name=PmOvertimeRule,proto3" json:"PmOvertimeRule"`
}

func (x *GetOnePmOvertimeRuleRes) Reset() {
	*x = GetOnePmOvertimeRuleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnePmOvertimeRuleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnePmOvertimeRuleRes) ProtoMessage() {}

func (x *GetOnePmOvertimeRuleRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnePmOvertimeRuleRes.ProtoReflect.Descriptor instead.
func (*GetOnePmOvertimeRuleRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{4}
}

func (x *GetOnePmOvertimeRuleRes) GetPmOvertimeRule() *PmOvertimeRuleInfo {
	if x != nil {
		return x.PmOvertimeRule
	}
	return nil
}

// 列表接口输入数据结构
type GetListPmOvertimeRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int32               `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size           int32               `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	PmOvertimeRule *PmOvertimeRuleInfo `protobuf:"bytes,3,opt,name=PmOvertimeRule,proto3" json:"PmOvertimeRule"`
}

func (x *GetListPmOvertimeRuleReq) Reset() {
	*x = GetListPmOvertimeRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListPmOvertimeRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListPmOvertimeRuleReq) ProtoMessage() {}

func (x *GetListPmOvertimeRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListPmOvertimeRuleReq.ProtoReflect.Descriptor instead.
func (*GetListPmOvertimeRuleReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{5}
}

func (x *GetListPmOvertimeRuleReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListPmOvertimeRuleReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListPmOvertimeRuleReq) GetPmOvertimeRule() *PmOvertimeRuleInfo {
	if x != nil {
		return x.PmOvertimeRule
	}
	return nil
}

// 列表接口输出数据结构
type GetListPmOvertimeRuleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32                 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size      int32                 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	TotalSize int32                 `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize"`
	Data      []*PmOvertimeRuleInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data"`
}

func (x *GetListPmOvertimeRuleRes) Reset() {
	*x = GetListPmOvertimeRuleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListPmOvertimeRuleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListPmOvertimeRuleRes) ProtoMessage() {}

func (x *GetListPmOvertimeRuleRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListPmOvertimeRuleRes.ProtoReflect.Descriptor instead.
func (*GetListPmOvertimeRuleRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{6}
}

func (x *GetListPmOvertimeRuleRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListPmOvertimeRuleRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListPmOvertimeRuleRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListPmOvertimeRuleRes) GetData() []*PmOvertimeRuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyPmOvertimeRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark     string            `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark"`
	Redio      float32           `protobuf:"fixed32,2,opt,name=Redio,proto3" json:"Redio"`                                     // 浮动比例
	ScoreMin   float32           `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // 分值下限
	ScoreMax   float32           `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // 分值上限
	ScoreRange v1.ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // 分数区间包含关系（1：左闭右开，2：左开右闭）
	Id         int32             `protobuf:"varint,6,opt,name=Id,proto3" json:"Id"`                                            // v: required
}

func (x *ModifyPmOvertimeRuleReq) Reset() {
	*x = ModifyPmOvertimeRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPmOvertimeRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPmOvertimeRuleReq) ProtoMessage() {}

func (x *ModifyPmOvertimeRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPmOvertimeRuleReq.ProtoReflect.Descriptor instead.
func (*ModifyPmOvertimeRuleReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{7}
}

func (x *ModifyPmOvertimeRuleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyPmOvertimeRuleReq) GetRedio() float32 {
	if x != nil {
		return x.Redio
	}
	return 0
}

func (x *ModifyPmOvertimeRuleReq) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *ModifyPmOvertimeRuleReq) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *ModifyPmOvertimeRuleReq) GetScoreRange() v1.ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return v1.ScoreRangeEnum(0)
}

func (x *ModifyPmOvertimeRuleReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改数据接口输出数据结构
type ModifyPmOvertimeRuleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmOvertimeRule *PmOvertimeRuleInfo `protobuf:"bytes,1,opt,name=PmOvertimeRule,proto3" json:"PmOvertimeRule"`
}

func (x *ModifyPmOvertimeRuleRes) Reset() {
	*x = ModifyPmOvertimeRuleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPmOvertimeRuleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPmOvertimeRuleRes) ProtoMessage() {}

func (x *ModifyPmOvertimeRuleRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPmOvertimeRuleRes.ProtoReflect.Descriptor instead.
func (*ModifyPmOvertimeRuleRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyPmOvertimeRuleRes) GetPmOvertimeRule() *PmOvertimeRuleInfo {
	if x != nil {
		return x.PmOvertimeRule
	}
	return nil
}

// 删除数据接口输入数据结构
type DeletePmOvertimeRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"` // v: required
}

func (x *DeletePmOvertimeRuleReq) Reset() {
	*x = DeletePmOvertimeRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePmOvertimeRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePmOvertimeRuleReq) ProtoMessage() {}

func (x *DeletePmOvertimeRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePmOvertimeRuleReq.ProtoReflect.Descriptor instead.
func (*DeletePmOvertimeRuleReq) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePmOvertimeRuleReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeletePmOvertimeRuleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg"`              // v: required
}

func (x *DeletePmOvertimeRuleRes) Reset() {
	*x = DeletePmOvertimeRuleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePmOvertimeRuleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePmOvertimeRuleRes) ProtoMessage() {}

func (x *DeletePmOvertimeRuleRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePmOvertimeRuleRes.ProtoReflect.Descriptor instead.
func (*DeletePmOvertimeRuleRes) Descriptor() ([]byte, []int) {
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePmOvertimeRuleRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeletePmOvertimeRuleRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_config_inspirit_v1_pm_overtime_rule_proto protoreflect.FileDescriptor

var file_config_inspirit_v1_pm_overtime_rule_proto_rawDesc = []byte{
	0x0a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x25, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x02, 0x0a, 0x12, 0x50,
	0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x52, 0x65, 0x64, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12,
	0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xb7, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x52, 0x65, 0x64, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61,
	0x78, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x50,
	0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6d, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6d, 0x4f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6d, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x52, 0x65, 0x64, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x4d, 0x61, 0x78, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x17,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x50, 0x6d, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73,
	0x67, 0x32, 0x99, 0x03, 0x0a, 0x0e, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6d,
	0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x50, 0x6d, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x50, 0x6d, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6d, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6d,
	0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6d, 0x4f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6d, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6d, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x38, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6a, 0x31, 0x35,
	0x37, 0x30, 0x36, 0x39, 0x33, 0x36, 0x35, 0x39, 0x2f, 0x67, 0x66, 0x63, 0x71, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_inspirit_v1_pm_overtime_rule_proto_rawDescOnce sync.Once
	file_config_inspirit_v1_pm_overtime_rule_proto_rawDescData = file_config_inspirit_v1_pm_overtime_rule_proto_rawDesc
)

func file_config_inspirit_v1_pm_overtime_rule_proto_rawDescGZIP() []byte {
	file_config_inspirit_v1_pm_overtime_rule_proto_rawDescOnce.Do(func() {
		file_config_inspirit_v1_pm_overtime_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_inspirit_v1_pm_overtime_rule_proto_rawDescData)
	})
	return file_config_inspirit_v1_pm_overtime_rule_proto_rawDescData
}

var file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_config_inspirit_v1_pm_overtime_rule_proto_goTypes = []interface{}{
	(*PmOvertimeRuleInfo)(nil),       // 0: config.PmOvertimeRuleInfo
	(*CreatePmOvertimeRuleReq)(nil),  // 1: config.CreatePmOvertimeRuleReq
	(*CreatePmOvertimeRuleRes)(nil),  // 2: config.CreatePmOvertimeRuleRes
	(*GetOnePmOvertimeRuleReq)(nil),  // 3: config.GetOnePmOvertimeRuleReq
	(*GetOnePmOvertimeRuleRes)(nil),  // 4: config.GetOnePmOvertimeRuleRes
	(*GetListPmOvertimeRuleReq)(nil), // 5: config.GetListPmOvertimeRuleReq
	(*GetListPmOvertimeRuleRes)(nil), // 6: config.GetListPmOvertimeRuleRes
	(*ModifyPmOvertimeRuleReq)(nil),  // 7: config.ModifyPmOvertimeRuleReq
	(*ModifyPmOvertimeRuleRes)(nil),  // 8: config.ModifyPmOvertimeRuleRes
	(*DeletePmOvertimeRuleReq)(nil),  // 9: config.DeletePmOvertimeRuleReq
	(*DeletePmOvertimeRuleRes)(nil),  // 10: config.DeletePmOvertimeRuleRes
	(v1.ScoreRangeEnum)(0),           // 11: config.ScoreRangeEnum
}
var file_config_inspirit_v1_pm_overtime_rule_proto_depIdxs = []int32{
	11, // 0: config.PmOvertimeRuleInfo.ScoreRange:type_name -> config.ScoreRangeEnum
	11, // 1: config.CreatePmOvertimeRuleReq.ScoreRange:type_name -> config.ScoreRangeEnum
	0,  // 2: config.CreatePmOvertimeRuleRes.PmOvertimeRule:type_name -> config.PmOvertimeRuleInfo
	0,  // 3: config.GetOnePmOvertimeRuleReq.PmOvertimeRule:type_name -> config.PmOvertimeRuleInfo
	0,  // 4: config.GetOnePmOvertimeRuleRes.PmOvertimeRule:type_name -> config.PmOvertimeRuleInfo
	0,  // 5: config.GetListPmOvertimeRuleReq.PmOvertimeRule:type_name -> config.PmOvertimeRuleInfo
	0,  // 6: config.GetListPmOvertimeRuleRes.Data:type_name -> config.PmOvertimeRuleInfo
	11, // 7: config.ModifyPmOvertimeRuleReq.ScoreRange:type_name -> config.ScoreRangeEnum
	0,  // 8: config.ModifyPmOvertimeRuleRes.PmOvertimeRule:type_name -> config.PmOvertimeRuleInfo
	1,  // 9: config.PmOvertimeRule.Create:input_type -> config.CreatePmOvertimeRuleReq
	3,  // 10: config.PmOvertimeRule.GetOne:input_type -> config.GetOnePmOvertimeRuleReq
	5,  // 11: config.PmOvertimeRule.GetList:input_type -> config.GetListPmOvertimeRuleReq
	7,  // 12: config.PmOvertimeRule.Modify:input_type -> config.ModifyPmOvertimeRuleReq
	9,  // 13: config.PmOvertimeRule.Delete:input_type -> config.DeletePmOvertimeRuleReq
	2,  // 14: config.PmOvertimeRule.Create:output_type -> config.CreatePmOvertimeRuleRes
	4,  // 15: config.PmOvertimeRule.GetOne:output_type -> config.GetOnePmOvertimeRuleRes
	6,  // 16: config.PmOvertimeRule.GetList:output_type -> config.GetListPmOvertimeRuleRes
	8,  // 17: config.PmOvertimeRule.Modify:output_type -> config.ModifyPmOvertimeRuleRes
	10, // 18: config.PmOvertimeRule.Delete:output_type -> config.DeletePmOvertimeRuleRes
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_config_inspirit_v1_pm_overtime_rule_proto_init() }
func file_config_inspirit_v1_pm_overtime_rule_proto_init() {
	if File_config_inspirit_v1_pm_overtime_rule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmOvertimeRuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePmOvertimeRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePmOvertimeRuleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnePmOvertimeRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnePmOvertimeRuleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListPmOvertimeRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListPmOvertimeRuleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPmOvertimeRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPmOvertimeRuleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePmOvertimeRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePmOvertimeRuleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_inspirit_v1_pm_overtime_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_inspirit_v1_pm_overtime_rule_proto_goTypes,
		DependencyIndexes: file_config_inspirit_v1_pm_overtime_rule_proto_depIdxs,
		MessageInfos:      file_config_inspirit_v1_pm_overtime_rule_proto_msgTypes,
	}.Build()
	File_config_inspirit_v1_pm_overtime_rule_proto = out.File
	file_config_inspirit_v1_pm_overtime_rule_proto_rawDesc = nil
	file_config_inspirit_v1_pm_overtime_rule_proto_goTypes = nil
	file_config_inspirit_v1_pm_overtime_rule_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PmOvertimeRuleClient is the client API for PmOvertimeRule service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PmOvertimeRuleClient interface {
	Create(ctx context.Context, in *CreatePmOvertimeRuleReq, opts ...grpc.CallOption) (*CreatePmOvertimeRuleRes, error)
	GetOne(ctx context.Context, in *GetOnePmOvertimeRuleReq, opts ...grpc.CallOption) (*GetOnePmOvertimeRuleRes, error)
	GetList(ctx context.Context, in *GetListPmOvertimeRuleReq, opts ...grpc.CallOption) (*GetListPmOvertimeRuleRes, error)
	Modify(ctx context.Context, in *ModifyPmOvertimeRuleReq, opts ...grpc.CallOption) (*ModifyPmOvertimeRuleRes, error)
	Delete(ctx context.Context, in *DeletePmOvertimeRuleReq, opts ...grpc.CallOption) (*DeletePmOvertimeRuleRes, error)
}

type pmOvertimeRuleClient struct {
	cc grpc.ClientConnInterface
}

func NewPmOvertimeRuleClient(cc grpc.ClientConnInterface) PmOvertimeRuleClient {
	return &pmOvertimeRuleClient{cc}
}

func (c *pmOvertimeRuleClient) Create(ctx context.Context, in *CreatePmOvertimeRuleReq, opts ...grpc.CallOption) (*CreatePmOvertimeRuleRes, error) {
	out := new(CreatePmOvertimeRuleRes)
	err := c.cc.Invoke(ctx, "/config.PmOvertimeRule/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmOvertimeRuleClient) GetOne(ctx context.Context, in *GetOnePmOvertimeRuleReq, opts ...grpc.CallOption) (*GetOnePmOvertimeRuleRes, error) {
	out := new(GetOnePmOvertimeRuleRes)
	err := c.cc.Invoke(ctx, "/config.PmOvertimeRule/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmOvertimeRuleClient) GetList(ctx context.Context, in *GetListPmOvertimeRuleReq, opts ...grpc.CallOption) (*GetListPmOvertimeRuleRes, error) {
	out := new(GetListPmOvertimeRuleRes)
	err := c.cc.Invoke(ctx, "/config.PmOvertimeRule/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmOvertimeRuleClient) Modify(ctx context.Context, in *ModifyPmOvertimeRuleReq, opts ...grpc.CallOption) (*ModifyPmOvertimeRuleRes, error) {
	out := new(ModifyPmOvertimeRuleRes)
	err := c.cc.Invoke(ctx, "/config.PmOvertimeRule/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pmOvertimeRuleClient) Delete(ctx context.Context, in *DeletePmOvertimeRuleReq, opts ...grpc.CallOption) (*DeletePmOvertimeRuleRes, error) {
	out := new(DeletePmOvertimeRuleRes)
	err := c.cc.Invoke(ctx, "/config.PmOvertimeRule/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PmOvertimeRuleServer is the server API for PmOvertimeRule service.
type PmOvertimeRuleServer interface {
	Create(context.Context, *CreatePmOvertimeRuleReq) (*CreatePmOvertimeRuleRes, error)
	GetOne(context.Context, *GetOnePmOvertimeRuleReq) (*GetOnePmOvertimeRuleRes, error)
	GetList(context.Context, *GetListPmOvertimeRuleReq) (*GetListPmOvertimeRuleRes, error)
	Modify(context.Context, *ModifyPmOvertimeRuleReq) (*ModifyPmOvertimeRuleRes, error)
	Delete(context.Context, *DeletePmOvertimeRuleReq) (*DeletePmOvertimeRuleRes, error)
}

// UnimplementedPmOvertimeRuleServer can be embedded to have forward compatible implementations.
type UnimplementedPmOvertimeRuleServer struct {
}

func (*UnimplementedPmOvertimeRuleServer) Create(context.Context, *CreatePmOvertimeRuleReq) (*CreatePmOvertimeRuleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPmOvertimeRuleServer) GetOne(context.Context, *GetOnePmOvertimeRuleReq) (*GetOnePmOvertimeRuleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedPmOvertimeRuleServer) GetList(context.Context, *GetListPmOvertimeRuleReq) (*GetListPmOvertimeRuleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedPmOvertimeRuleServer) Modify(context.Context, *ModifyPmOvertimeRuleReq) (*ModifyPmOvertimeRuleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedPmOvertimeRuleServer) Delete(context.Context, *DeletePmOvertimeRuleReq) (*DeletePmOvertimeRuleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPmOvertimeRuleServer(s *grpc.Server, srv PmOvertimeRuleServer) {
	s.RegisterService(&_PmOvertimeRule_serviceDesc, srv)
}

func _PmOvertimeRule_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePmOvertimeRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PmOvertimeRuleServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.PmOvertimeRule/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PmOvertimeRuleServer).Create(ctx, req.(*CreatePmOvertimeRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PmOvertimeRule_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnePmOvertimeRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PmOvertimeRuleServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.PmOvertimeRule/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PmOvertimeRuleServer).GetOne(ctx, req.(*GetOnePmOvertimeRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PmOvertimeRule_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListPmOvertimeRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PmOvertimeRuleServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.PmOvertimeRule/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PmOvertimeRuleServer).GetList(ctx, req.(*GetListPmOvertimeRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PmOvertimeRule_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyPmOvertimeRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PmOvertimeRuleServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.PmOvertimeRule/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PmOvertimeRuleServer).Modify(ctx, req.(*ModifyPmOvertimeRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PmOvertimeRule_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePmOvertimeRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PmOvertimeRuleServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.PmOvertimeRule/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PmOvertimeRuleServer).Delete(ctx, req.(*DeletePmOvertimeRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PmOvertimeRule_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.PmOvertimeRule",
	HandlerType: (*PmOvertimeRuleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PmOvertimeRule_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _PmOvertimeRule_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _PmOvertimeRule_GetList_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _PmOvertimeRule_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PmOvertimeRule_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/inspirit/v1/pm_overtime_rule.proto",
}
