// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";

package config;

option go_package = "github.com/lj1570693659/gfcq_protoc/config/inspirit/v1";

import "config/product/v1/level_confirm.proto";

// PmOvertimeRule PM浮动贡献-加班贡献比例
service PmOvertimeRule {
  rpc Create(CreatePmOvertimeRuleReq) returns (CreatePmOvertimeRuleRes) {}
  rpc GetOne(GetOnePmOvertimeRuleReq) returns (GetOnePmOvertimeRuleRes) {}
  rpc GetList(GetListPmOvertimeRuleReq) returns (GetListPmOvertimeRuleRes) {}
  rpc Modify(ModifyPmOvertimeRuleReq) returns (ModifyPmOvertimeRuleRes) {}
  rpc Delete(DeletePmOvertimeRuleReq) returns (DeletePmOvertimeRuleRes) {}
}

// PmOvertimeRule is the golang structure for table Pm_overtime_rule.
message PmOvertimeRuleInfo {
  int32             Id = 1;
  float          Redio = 2;// 浮动比例
  float          ScoreMin = 3;// 分值下限
  float          ScoreMax = 4;// 分值上限
  ScoreRange          ScoreRange = 5;// 分数区间包含关系（1：左闭右开，2：左开右闭）
  string          Remark = 6;// 预留备注说明信息
  string CreateTime = 7;// 数据新增时间
  string  UpdateTime = 8;// 最后一次更新数据时间
}


// 创建数据接口输入数据结构
message CreatePmOvertimeRuleReq {
  string Remark = 1;
  float          Redio = 2;// 浮动比例
  float          ScoreMin = 3;// 分值下限
  float          ScoreMax = 4;// 分值上限
  ScoreRange          ScoreRange = 5;// 分数区间包含关系（1：左闭右开，2：左开右闭）

}

// 创建数据接口输出数据结构
message CreatePmOvertimeRuleRes {
  PmOvertimeRuleInfo PmOvertimeRule = 1;
}

// 获取详情接口输入数据结构
message GetOnePmOvertimeRuleReq {
  PmOvertimeRuleInfo PmOvertimeRule = 1;
}

// 获取详情接口输出数据结构
message GetOnePmOvertimeRuleRes {
  PmOvertimeRuleInfo PmOvertimeRule = 1;
}

// 列表接口输入数据结构
message GetListPmOvertimeRuleReq {
  int32 Page = 1;
  int32 Size = 2;
  PmOvertimeRuleInfo PmOvertimeRule = 3;
}

// 列表接口输出数据结构
message GetListPmOvertimeRuleRes {
  int32 Page = 1;
  int32 Size = 2;
  int32 TotalSize = 3;
  repeated PmOvertimeRuleInfo Data = 4;
}

// 修改数据接口输入数据结构
message ModifyPmOvertimeRuleReq {
  string Remark = 1;
  float          Redio = 2;// 浮动比例
  float          ScoreMin = 3;// 分值下限
  float          ScoreMax = 4;// 分值上限
  ScoreRange          ScoreRange = 5;// 分数区间包含关系（1：左闭右开，2：左开右闭）
  int32 Id = 6; // v: required
}

// 修改数据接口输出数据结构
message ModifyPmOvertimeRuleRes {
  PmOvertimeRuleInfo PmOvertimeRule = 1;
}

// 删除数据接口输入数据结构
message DeletePmOvertimeRuleReq {
  int32 Id = 1; // v: required
}

// 删除数据接口输出数据结构
message DeletePmOvertimeRuleRes {
  bool IsSuccess = 1; // v: required
  string Msg = 2; // v: required
}