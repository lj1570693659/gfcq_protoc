// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";

package config;

option go_package = "github.com/lj1570693659/gfcq_protoc/config/inspirit/v1";

import "config/inspirit/v1/crew_solve_rule.proto";

service PmSolveRule {
  rpc Create(CreatePmSolveRuleReq) returns (CreatePmSolveRuleRes) {}
  rpc GetOne(GetOnePmSolveRuleReq) returns (GetOnePmSolveRuleRes) {}
  rpc GetList(GetListPmSolveRuleReq) returns (GetListPmSolveRuleRes) {}
  rpc Modify(ModifyPmSolveRuleReq) returns (ModifyPmSolveRuleRes) {}
  rpc Delete(DeletePmSolveRuleReq) returns (DeletePmSolveRuleRes) {}
}

// PmPmSolveRule is the golang structure for table Pm_solve_rule.
message PmSolveRuleInfo {
  int32             Id = 1;
  float          Redio = 2;// 浮动比例
  DemandEnum          Demand = 3;// 贡献标准（1：有突出贡献，2：有重要贡献，3：较低/无贡献）
  string          Remark = 4;// 预留备注说明信息
  string CreateTime = 5;// 数据新增时间
  string  UpdateTime = 6;// 最后一次更新数据时间
}

// 创建数据接口输入数据结构
message CreatePmSolveRuleReq {
  string Remark = 1;
  float          Redio = 2;// 浮动比例
  DemandEnum          Demand = 3;// 贡献标准（1：有突出贡献，2：有重要贡献，3：较低/无贡献）
}

// 创建数据接口输出数据结构
message CreatePmSolveRuleRes {
  PmSolveRuleInfo PmSolveRule = 1;
}

// 获取详情接口输入数据结构
message GetOnePmSolveRuleReq {
  PmSolveRuleInfo PmSolveRule = 1;
}

// 获取详情接口输出数据结构
message GetOnePmSolveRuleRes {
  PmSolveRuleInfo PmSolveRule = 1;
}

// 列表接口输入数据结构
message GetListPmSolveRuleReq {
  int32 Page = 1;
  int32 Size = 2;
  PmSolveRuleInfo PmSolveRule = 3;
}

// 列表接口输出数据结构
message GetListPmSolveRuleRes {
  int32 Page = 1;
  int32 Size = 2;
  int32 TotalSize = 3;
  repeated PmSolveRuleInfo Data = 4;
}

// 修改数据接口输入数据结构
message ModifyPmSolveRuleReq {
  string Remark = 1;
  float          Redio = 2;// 浮动比例
  DemandEnum          Demand = 3;// 贡献标准（1：有突出贡献，2：有重要贡献，3：较低/无贡献）
  int32 Id = 4; // v: required
}

// 修改数据接口输出数据结构
message ModifyPmSolveRuleRes {
  PmSolveRuleInfo PmSolveRule = 1;
}

// 删除数据接口输入数据结构
message DeletePmSolveRuleReq {
  int32 Id = 1; // v: required
}

// 删除数据接口输出数据结构
message DeletePmSolveRuleRes {
  bool IsSuccess = 1; // v: required
  string Msg = 2; // v: required
}