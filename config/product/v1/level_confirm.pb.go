// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: config/product/v1/level_confirm.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 得分区间包含关系（1：左闭右开，2：左开右闭）
type ScoreRangeEnum int32

const (
	ScoreRangeEnum_anything   ScoreRangeEnum = 0
	ScoreRangeEnum_includeMin ScoreRangeEnum = 1
	ScoreRangeEnum_includeMax ScoreRangeEnum = 2
)

// Enum value maps for ScoreRangeEnum.
var (
	ScoreRangeEnum_name = map[int32]string{
		0: "anything",
		1: "includeMin",
		2: "includeMax",
	}
	ScoreRangeEnum_value = map[string]int32{
		"anything":   0,
		"includeMin": 1,
		"includeMax": 2,
	}
)

func (x ScoreRangeEnum) Enum() *ScoreRangeEnum {
	p := new(ScoreRangeEnum)
	*p = x
	return p
}

func (x ScoreRangeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScoreRangeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_config_product_v1_level_confirm_proto_enumTypes[0].Descriptor()
}

func (ScoreRangeEnum) Type() protoreflect.EnumType {
	return &file_config_product_v1_level_confirm_proto_enumTypes[0]
}

func (x ScoreRangeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScoreRangeEnum.Descriptor instead.
func (ScoreRangeEnum) EnumDescriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{0}
}

// 是否委派PM(1:是 2：否)
type IsNeedPmEnum int32

const (
	IsNeedPmEnum_NotSureIsNeedPm IsNeedPmEnum = 0
	IsNeedPmEnum_NeedPm          IsNeedPmEnum = 1
	IsNeedPmEnum_NotNeedPm       IsNeedPmEnum = 2
)

// Enum value maps for IsNeedPmEnum.
var (
	IsNeedPmEnum_name = map[int32]string{
		0: "NotSureIsNeedPm",
		1: "NeedPm",
		2: "NotNeedPm",
	}
	IsNeedPmEnum_value = map[string]int32{
		"NotSureIsNeedPm": 0,
		"NeedPm":          1,
		"NotNeedPm":       2,
	}
)

func (x IsNeedPmEnum) Enum() *IsNeedPmEnum {
	p := new(IsNeedPmEnum)
	*p = x
	return p
}

func (x IsNeedPmEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsNeedPmEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_config_product_v1_level_confirm_proto_enumTypes[1].Descriptor()
}

func (IsNeedPmEnum) Type() protoreflect.EnumType {
	return &file_config_product_v1_level_confirm_proto_enumTypes[1]
}

func (x IsNeedPmEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsNeedPmEnum.Descriptor instead.
func (IsNeedPmEnum) EnumDescriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{1}
}

// 是否委派PMl(1:是 2：否)
type IsNeedPmlEnum int32

const (
	IsNeedPmlEnum_NotSureIsNeedPml IsNeedPmlEnum = 0
	IsNeedPmlEnum_NeedPml          IsNeedPmlEnum = 1
	IsNeedPmlEnum_NotNeedPml       IsNeedPmlEnum = 2
)

// Enum value maps for IsNeedPmlEnum.
var (
	IsNeedPmlEnum_name = map[int32]string{
		0: "NotSureIsNeedPml",
		1: "NeedPml",
		2: "NotNeedPml",
	}
	IsNeedPmlEnum_value = map[string]int32{
		"NotSureIsNeedPml": 0,
		"NeedPml":          1,
		"NotNeedPml":       2,
	}
)

func (x IsNeedPmlEnum) Enum() *IsNeedPmlEnum {
	p := new(IsNeedPmlEnum)
	*p = x
	return p
}

func (x IsNeedPmlEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsNeedPmlEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_config_product_v1_level_confirm_proto_enumTypes[2].Descriptor()
}

func (IsNeedPmlEnum) Type() protoreflect.EnumType {
	return &file_config_product_v1_level_confirm_proto_enumTypes[2]
}

func (x IsNeedPmlEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsNeedPmlEnum.Descriptor instead.
func (IsNeedPmlEnum) EnumDescriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{2}
}

// LevelConfirmInfo 项目优先级确认配置信息
type LevelConfirmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32          `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`                                            // ""
	Name          string         `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`                                         // "项目优先级"
	ScoreMin      float32        `protobuf:"fixed32,3,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // "得分下限"
	ScoreMax      float32        `protobuf:"fixed32,4,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // "得分上线"
	ScoreRange    ScoreRangeEnum `protobuf:"varint,5,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // "得分区间包含关系（1：左闭右开，2：左开右闭）"
	IsNeedPm      IsNeedPmEnum   `protobuf:"varint,6,opt,name=IsNeedPm,proto3,enum=config.IsNeedPmEnum" json:"IsNeedPm"`       // "是否委派PM(1:是 2：否)"
	PmDemand      string         `protobuf:"bytes,7,opt,name=PmDemand,proto3" json:"PmDemand"`                                 // "pm要求"
	ProductDemand string         `protobuf:"bytes,8,opt,name=ProductDemand,proto3" json:"ProductDemand"`                       // "项目工作相关要求"
	MonitDemand   string         `protobuf:"bytes,9,opt,name=MonitDemand,proto3" json:"MonitDemand"`                           // "监控要求"
	IsNeedPml     IsNeedPmlEnum  `protobuf:"varint,10,opt,name=IsNeedPml,proto3,enum=config.IsNeedPmlEnum" json:"IsNeedPml"`   // "是否需要项目负责人(1:是 2：否)"
	Remark        string         `protobuf:"bytes,11,opt,name=Remark,proto3" json:"Remark"`                                    // "预留备注说明信息"
	CreateTime    string         `protobuf:"bytes,12,opt,name=CreateTime,proto3" json:"CreateTime"`                            // "新增数据时间"
	UpdateTime    string         `protobuf:"bytes,13,opt,name=UpdateTime,proto3" json:"UpdateTime"`                            // "最新更新数据"
}

func (x *LevelConfirmInfo) Reset() {
	*x = LevelConfirmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelConfirmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelConfirmInfo) ProtoMessage() {}

func (x *LevelConfirmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelConfirmInfo.ProtoReflect.Descriptor instead.
func (*LevelConfirmInfo) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{0}
}

func (x *LevelConfirmInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LevelConfirmInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LevelConfirmInfo) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *LevelConfirmInfo) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *LevelConfirmInfo) GetScoreRange() ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return ScoreRangeEnum_anything
}

func (x *LevelConfirmInfo) GetIsNeedPm() IsNeedPmEnum {
	if x != nil {
		return x.IsNeedPm
	}
	return IsNeedPmEnum_NotSureIsNeedPm
}

func (x *LevelConfirmInfo) GetPmDemand() string {
	if x != nil {
		return x.PmDemand
	}
	return ""
}

func (x *LevelConfirmInfo) GetProductDemand() string {
	if x != nil {
		return x.ProductDemand
	}
	return ""
}

func (x *LevelConfirmInfo) GetMonitDemand() string {
	if x != nil {
		return x.MonitDemand
	}
	return ""
}

func (x *LevelConfirmInfo) GetIsNeedPml() IsNeedPmlEnum {
	if x != nil {
		return x.IsNeedPml
	}
	return IsNeedPmlEnum_NotSureIsNeedPml
}

func (x *LevelConfirmInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *LevelConfirmInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *LevelConfirmInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreateLevelConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string         `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`                                         // "项目优先级"
	ScoreMin      float32        `protobuf:"fixed32,2,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // "得分下限"
	ScoreMax      float32        `protobuf:"fixed32,3,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // "得分上线"
	ScoreRange    ScoreRangeEnum `protobuf:"varint,4,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // "得分区间包含关系（1：左闭右开，2：左开右闭）"
	IsNeedPm      IsNeedPmEnum   `protobuf:"varint,5,opt,name=IsNeedPm,proto3,enum=config.IsNeedPmEnum" json:"IsNeedPm"`       // "是否委派PM(1:是 2：否)"
	PmDemand      string         `protobuf:"bytes,6,opt,name=PmDemand,proto3" json:"PmDemand"`                                 // "pm要求"
	ProductDemand string         `protobuf:"bytes,7,opt,name=ProductDemand,proto3" json:"ProductDemand"`                       // "项目工作相关要求"
	MonitDemand   string         `protobuf:"bytes,8,opt,name=MonitDemand,proto3" json:"MonitDemand"`                           // "监控要求"
	IsNeedPml     IsNeedPmlEnum  `protobuf:"varint,9,opt,name=IsNeedPml,proto3,enum=config.IsNeedPmlEnum" json:"IsNeedPml"`    // "是否需要项目负责人(1:是 2：否)"
	Remark        string         `protobuf:"bytes,10,opt,name=Remark,proto3" json:"Remark"`                                    // "预留备注说明信息"
}

func (x *CreateLevelConfirmReq) Reset() {
	*x = CreateLevelConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLevelConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLevelConfirmReq) ProtoMessage() {}

func (x *CreateLevelConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLevelConfirmReq.ProtoReflect.Descriptor instead.
func (*CreateLevelConfirmReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLevelConfirmReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLevelConfirmReq) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *CreateLevelConfirmReq) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *CreateLevelConfirmReq) GetScoreRange() ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return ScoreRangeEnum_anything
}

func (x *CreateLevelConfirmReq) GetIsNeedPm() IsNeedPmEnum {
	if x != nil {
		return x.IsNeedPm
	}
	return IsNeedPmEnum_NotSureIsNeedPm
}

func (x *CreateLevelConfirmReq) GetPmDemand() string {
	if x != nil {
		return x.PmDemand
	}
	return ""
}

func (x *CreateLevelConfirmReq) GetProductDemand() string {
	if x != nil {
		return x.ProductDemand
	}
	return ""
}

func (x *CreateLevelConfirmReq) GetMonitDemand() string {
	if x != nil {
		return x.MonitDemand
	}
	return ""
}

func (x *CreateLevelConfirmReq) GetIsNeedPml() IsNeedPmlEnum {
	if x != nil {
		return x.IsNeedPml
	}
	return IsNeedPmlEnum_NotSureIsNeedPml
}

func (x *CreateLevelConfirmReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建数据接口输出数据结构
type CreateLevelConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelConfirm *LevelConfirmInfo `protobuf:"bytes,1,opt,name=LevelConfirm,proto3" json:"LevelConfirm"`
}

func (x *CreateLevelConfirmRes) Reset() {
	*x = CreateLevelConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLevelConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLevelConfirmRes) ProtoMessage() {}

func (x *CreateLevelConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLevelConfirmRes.ProtoReflect.Descriptor instead.
func (*CreateLevelConfirmRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLevelConfirmRes) GetLevelConfirm() *LevelConfirmInfo {
	if x != nil {
		return x.LevelConfirm
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOneLevelConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelConfirm *LevelConfirmInfo `protobuf:"bytes,1,opt,name=LevelConfirm,proto3" json:"LevelConfirm"`
}

func (x *GetOneLevelConfirmReq) Reset() {
	*x = GetOneLevelConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneLevelConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneLevelConfirmReq) ProtoMessage() {}

func (x *GetOneLevelConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneLevelConfirmReq.ProtoReflect.Descriptor instead.
func (*GetOneLevelConfirmReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneLevelConfirmReq) GetLevelConfirm() *LevelConfirmInfo {
	if x != nil {
		return x.LevelConfirm
	}
	return nil
}

// 获取详情接口输出数据结构
type GetOneLevelConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelConfirm *LevelConfirmInfo `protobuf:"bytes,1,opt,name=LevelConfirm,proto3" json:"LevelConfirm"`
}

func (x *GetOneLevelConfirmRes) Reset() {
	*x = GetOneLevelConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneLevelConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneLevelConfirmRes) ProtoMessage() {}

func (x *GetOneLevelConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneLevelConfirmRes.ProtoReflect.Descriptor instead.
func (*GetOneLevelConfirmRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneLevelConfirmRes) GetLevelConfirm() *LevelConfirmInfo {
	if x != nil {
		return x.LevelConfirm
	}
	return nil
}

// 列表接口输入数据结构
type GetListLevelConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         int32             `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size         int32             `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	LevelConfirm *LevelConfirmInfo `protobuf:"bytes,3,opt,name=LevelConfirm,proto3" json:"LevelConfirm"`
}

func (x *GetListLevelConfirmReq) Reset() {
	*x = GetListLevelConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListLevelConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListLevelConfirmReq) ProtoMessage() {}

func (x *GetListLevelConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListLevelConfirmReq.ProtoReflect.Descriptor instead.
func (*GetListLevelConfirmReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{5}
}

func (x *GetListLevelConfirmReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListLevelConfirmReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListLevelConfirmReq) GetLevelConfirm() *LevelConfirmInfo {
	if x != nil {
		return x.LevelConfirm
	}
	return nil
}

// 列表接口输出数据结构
type GetListLevelConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32               `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size      int32               `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	TotalSize int32               `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize"`
	Data      []*LevelConfirmInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data"`
}

func (x *GetListLevelConfirmRes) Reset() {
	*x = GetListLevelConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListLevelConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListLevelConfirmRes) ProtoMessage() {}

func (x *GetListLevelConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListLevelConfirmRes.ProtoReflect.Descriptor instead.
func (*GetListLevelConfirmRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{6}
}

func (x *GetListLevelConfirmRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListLevelConfirmRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListLevelConfirmRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListLevelConfirmRes) GetData() []*LevelConfirmInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyLevelConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string         `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`                                         // "项目优先级"
	ScoreMin      float32        `protobuf:"fixed32,2,opt,name=ScoreMin,proto3" json:"ScoreMin"`                               // "得分下限"
	ScoreMax      float32        `protobuf:"fixed32,3,opt,name=ScoreMax,proto3" json:"ScoreMax"`                               // "得分上线"
	ScoreRange    ScoreRangeEnum `protobuf:"varint,4,opt,name=ScoreRange,proto3,enum=config.ScoreRangeEnum" json:"ScoreRange"` // "得分区间包含关系（1：左闭右开，2：左开右闭）"
	IsNeedPm      IsNeedPmEnum   `protobuf:"varint,5,opt,name=IsNeedPm,proto3,enum=config.IsNeedPmEnum" json:"IsNeedPm"`       // "是否委派PM(1:是 2：否)"
	PmDemand      string         `protobuf:"bytes,6,opt,name=PmDemand,proto3" json:"PmDemand"`                                 // "pm要求"
	ProductDemand string         `protobuf:"bytes,7,opt,name=ProductDemand,proto3" json:"ProductDemand"`                       // "项目工作相关要求"
	MonitDemand   string         `protobuf:"bytes,8,opt,name=MonitDemand,proto3" json:"MonitDemand"`                           // "监控要求"
	IsNeedPml     IsNeedPmlEnum  `protobuf:"varint,9,opt,name=IsNeedPml,proto3,enum=config.IsNeedPmlEnum" json:"IsNeedPml"`    // "是否需要项目负责人(1:是 2：否)"
	Remark        string         `protobuf:"bytes,10,opt,name=Remark,proto3" json:"Remark"`                                    // "预留备注说明信息"
	Id            int32          `protobuf:"varint,11,opt,name=Id,proto3" json:"Id"`                                           // v: required
}

func (x *ModifyLevelConfirmReq) Reset() {
	*x = ModifyLevelConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLevelConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLevelConfirmReq) ProtoMessage() {}

func (x *ModifyLevelConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLevelConfirmReq.ProtoReflect.Descriptor instead.
func (*ModifyLevelConfirmReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{7}
}

func (x *ModifyLevelConfirmReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyLevelConfirmReq) GetScoreMin() float32 {
	if x != nil {
		return x.ScoreMin
	}
	return 0
}

func (x *ModifyLevelConfirmReq) GetScoreMax() float32 {
	if x != nil {
		return x.ScoreMax
	}
	return 0
}

func (x *ModifyLevelConfirmReq) GetScoreRange() ScoreRangeEnum {
	if x != nil {
		return x.ScoreRange
	}
	return ScoreRangeEnum_anything
}

func (x *ModifyLevelConfirmReq) GetIsNeedPm() IsNeedPmEnum {
	if x != nil {
		return x.IsNeedPm
	}
	return IsNeedPmEnum_NotSureIsNeedPm
}

func (x *ModifyLevelConfirmReq) GetPmDemand() string {
	if x != nil {
		return x.PmDemand
	}
	return ""
}

func (x *ModifyLevelConfirmReq) GetProductDemand() string {
	if x != nil {
		return x.ProductDemand
	}
	return ""
}

func (x *ModifyLevelConfirmReq) GetMonitDemand() string {
	if x != nil {
		return x.MonitDemand
	}
	return ""
}

func (x *ModifyLevelConfirmReq) GetIsNeedPml() IsNeedPmlEnum {
	if x != nil {
		return x.IsNeedPml
	}
	return IsNeedPmlEnum_NotSureIsNeedPml
}

func (x *ModifyLevelConfirmReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyLevelConfirmReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改数据接口输出数据结构
type ModifyLevelConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelConfirm *LevelConfirmInfo `protobuf:"bytes,1,opt,name=LevelConfirm,proto3" json:"LevelConfirm"`
}

func (x *ModifyLevelConfirmRes) Reset() {
	*x = ModifyLevelConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLevelConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLevelConfirmRes) ProtoMessage() {}

func (x *ModifyLevelConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLevelConfirmRes.ProtoReflect.Descriptor instead.
func (*ModifyLevelConfirmRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyLevelConfirmRes) GetLevelConfirm() *LevelConfirmInfo {
	if x != nil {
		return x.LevelConfirm
	}
	return nil
}

// 删除数据接口输入数据结构
type DeleteLevelConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"` // v: required
}

func (x *DeleteLevelConfirmReq) Reset() {
	*x = DeleteLevelConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLevelConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLevelConfirmReq) ProtoMessage() {}

func (x *DeleteLevelConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLevelConfirmReq.ProtoReflect.Descriptor instead.
func (*DeleteLevelConfirmReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteLevelConfirmReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeleteLevelConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg"`              // v: required
}

func (x *DeleteLevelConfirmRes) Reset() {
	*x = DeleteLevelConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_level_confirm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLevelConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLevelConfirmRes) ProtoMessage() {}

func (x *DeleteLevelConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_level_confirm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLevelConfirmRes.ProtoReflect.Descriptor instead.
func (*DeleteLevelConfirmRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_level_confirm_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteLevelConfirmRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeleteLevelConfirmRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_config_product_v1_level_confirm_proto protoreflect.FileDescriptor

var file_config_product_v1_level_confirm_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xc9, 0x03, 0x0a, 0x10, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78,
	0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x49, 0x73, 0x4e, 0x65,
	0x65, 0x64, 0x50, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6d,
	0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6d,
	0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x33,
	0x0a, 0x09, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x73, 0x4e, 0x65, 0x65,
	0x64, 0x50, 0x6d, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64,
	0x50, 0x6d, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61,
	0x78, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x49, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x50, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x6d, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x6d, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x33, 0x0a, 0x09, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x73, 0x4e, 0x65,
	0x65, 0x64, 0x50, 0x6d, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x49, 0x73, 0x4e, 0x65, 0x65,
	0x64, 0x50, 0x6d, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x55, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x22, 0x7e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x8e, 0x03, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64,
	0x50, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6d, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x6d, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x44, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09,
	0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x55, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x47, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x2a, 0x3e, 0x0a, 0x0e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x08,
	0x61, 0x6e, 0x79, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x61, 0x78, 0x10, 0x02, 0x2a, 0x3e, 0x0a, 0x0c, 0x49, 0x73,
	0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x6f,
	0x74, 0x53, 0x75, 0x72, 0x65, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x6f, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x10, 0x02, 0x2a, 0x42, 0x0a, 0x0d, 0x49, 0x73,
	0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x53, 0x75, 0x72, 0x65, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x6d, 0x6c, 0x10, 0x02, 0x32, 0x83,
	0x03, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x48, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x6a, 0x31, 0x35, 0x37, 0x30, 0x36, 0x39, 0x33, 0x36, 0x35, 0x39, 0x2f,
	0x67, 0x66, 0x63, 0x71, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_product_v1_level_confirm_proto_rawDescOnce sync.Once
	file_config_product_v1_level_confirm_proto_rawDescData = file_config_product_v1_level_confirm_proto_rawDesc
)

func file_config_product_v1_level_confirm_proto_rawDescGZIP() []byte {
	file_config_product_v1_level_confirm_proto_rawDescOnce.Do(func() {
		file_config_product_v1_level_confirm_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_product_v1_level_confirm_proto_rawDescData)
	})
	return file_config_product_v1_level_confirm_proto_rawDescData
}

var file_config_product_v1_level_confirm_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_config_product_v1_level_confirm_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_config_product_v1_level_confirm_proto_goTypes = []interface{}{
	(ScoreRangeEnum)(0),            // 0: config.ScoreRangeEnum
	(IsNeedPmEnum)(0),              // 1: config.IsNeedPmEnum
	(IsNeedPmlEnum)(0),             // 2: config.IsNeedPmlEnum
	(*LevelConfirmInfo)(nil),       // 3: config.LevelConfirmInfo
	(*CreateLevelConfirmReq)(nil),  // 4: config.CreateLevelConfirmReq
	(*CreateLevelConfirmRes)(nil),  // 5: config.CreateLevelConfirmRes
	(*GetOneLevelConfirmReq)(nil),  // 6: config.GetOneLevelConfirmReq
	(*GetOneLevelConfirmRes)(nil),  // 7: config.GetOneLevelConfirmRes
	(*GetListLevelConfirmReq)(nil), // 8: config.GetListLevelConfirmReq
	(*GetListLevelConfirmRes)(nil), // 9: config.GetListLevelConfirmRes
	(*ModifyLevelConfirmReq)(nil),  // 10: config.ModifyLevelConfirmReq
	(*ModifyLevelConfirmRes)(nil),  // 11: config.ModifyLevelConfirmRes
	(*DeleteLevelConfirmReq)(nil),  // 12: config.DeleteLevelConfirmReq
	(*DeleteLevelConfirmRes)(nil),  // 13: config.DeleteLevelConfirmRes
}
var file_config_product_v1_level_confirm_proto_depIdxs = []int32{
	0,  // 0: config.LevelConfirmInfo.ScoreRange:type_name -> config.ScoreRangeEnum
	1,  // 1: config.LevelConfirmInfo.IsNeedPm:type_name -> config.IsNeedPmEnum
	2,  // 2: config.LevelConfirmInfo.IsNeedPml:type_name -> config.IsNeedPmlEnum
	0,  // 3: config.CreateLevelConfirmReq.ScoreRange:type_name -> config.ScoreRangeEnum
	1,  // 4: config.CreateLevelConfirmReq.IsNeedPm:type_name -> config.IsNeedPmEnum
	2,  // 5: config.CreateLevelConfirmReq.IsNeedPml:type_name -> config.IsNeedPmlEnum
	3,  // 6: config.CreateLevelConfirmRes.LevelConfirm:type_name -> config.LevelConfirmInfo
	3,  // 7: config.GetOneLevelConfirmReq.LevelConfirm:type_name -> config.LevelConfirmInfo
	3,  // 8: config.GetOneLevelConfirmRes.LevelConfirm:type_name -> config.LevelConfirmInfo
	3,  // 9: config.GetListLevelConfirmReq.LevelConfirm:type_name -> config.LevelConfirmInfo
	3,  // 10: config.GetListLevelConfirmRes.Data:type_name -> config.LevelConfirmInfo
	0,  // 11: config.ModifyLevelConfirmReq.ScoreRange:type_name -> config.ScoreRangeEnum
	1,  // 12: config.ModifyLevelConfirmReq.IsNeedPm:type_name -> config.IsNeedPmEnum
	2,  // 13: config.ModifyLevelConfirmReq.IsNeedPml:type_name -> config.IsNeedPmlEnum
	3,  // 14: config.ModifyLevelConfirmRes.LevelConfirm:type_name -> config.LevelConfirmInfo
	4,  // 15: config.LevelConfirm.Create:input_type -> config.CreateLevelConfirmReq
	6,  // 16: config.LevelConfirm.GetOne:input_type -> config.GetOneLevelConfirmReq
	8,  // 17: config.LevelConfirm.GetList:input_type -> config.GetListLevelConfirmReq
	10, // 18: config.LevelConfirm.Modify:input_type -> config.ModifyLevelConfirmReq
	12, // 19: config.LevelConfirm.Delete:input_type -> config.DeleteLevelConfirmReq
	5,  // 20: config.LevelConfirm.Create:output_type -> config.CreateLevelConfirmRes
	7,  // 21: config.LevelConfirm.GetOne:output_type -> config.GetOneLevelConfirmRes
	9,  // 22: config.LevelConfirm.GetList:output_type -> config.GetListLevelConfirmRes
	11, // 23: config.LevelConfirm.Modify:output_type -> config.ModifyLevelConfirmRes
	13, // 24: config.LevelConfirm.Delete:output_type -> config.DeleteLevelConfirmRes
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_config_product_v1_level_confirm_proto_init() }
func file_config_product_v1_level_confirm_proto_init() {
	if File_config_product_v1_level_confirm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_product_v1_level_confirm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelConfirmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLevelConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLevelConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneLevelConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneLevelConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListLevelConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListLevelConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLevelConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLevelConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLevelConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_level_confirm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLevelConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_product_v1_level_confirm_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_product_v1_level_confirm_proto_goTypes,
		DependencyIndexes: file_config_product_v1_level_confirm_proto_depIdxs,
		EnumInfos:         file_config_product_v1_level_confirm_proto_enumTypes,
		MessageInfos:      file_config_product_v1_level_confirm_proto_msgTypes,
	}.Build()
	File_config_product_v1_level_confirm_proto = out.File
	file_config_product_v1_level_confirm_proto_rawDesc = nil
	file_config_product_v1_level_confirm_proto_goTypes = nil
	file_config_product_v1_level_confirm_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LevelConfirmClient is the client API for LevelConfirm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LevelConfirmClient interface {
	Create(ctx context.Context, in *CreateLevelConfirmReq, opts ...grpc.CallOption) (*CreateLevelConfirmRes, error)
	GetOne(ctx context.Context, in *GetOneLevelConfirmReq, opts ...grpc.CallOption) (*GetOneLevelConfirmRes, error)
	GetList(ctx context.Context, in *GetListLevelConfirmReq, opts ...grpc.CallOption) (*GetListLevelConfirmRes, error)
	Modify(ctx context.Context, in *ModifyLevelConfirmReq, opts ...grpc.CallOption) (*ModifyLevelConfirmRes, error)
	Delete(ctx context.Context, in *DeleteLevelConfirmReq, opts ...grpc.CallOption) (*DeleteLevelConfirmRes, error)
}

type levelConfirmClient struct {
	cc grpc.ClientConnInterface
}

func NewLevelConfirmClient(cc grpc.ClientConnInterface) LevelConfirmClient {
	return &levelConfirmClient{cc}
}

func (c *levelConfirmClient) Create(ctx context.Context, in *CreateLevelConfirmReq, opts ...grpc.CallOption) (*CreateLevelConfirmRes, error) {
	out := new(CreateLevelConfirmRes)
	err := c.cc.Invoke(ctx, "/config.LevelConfirm/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *levelConfirmClient) GetOne(ctx context.Context, in *GetOneLevelConfirmReq, opts ...grpc.CallOption) (*GetOneLevelConfirmRes, error) {
	out := new(GetOneLevelConfirmRes)
	err := c.cc.Invoke(ctx, "/config.LevelConfirm/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *levelConfirmClient) GetList(ctx context.Context, in *GetListLevelConfirmReq, opts ...grpc.CallOption) (*GetListLevelConfirmRes, error) {
	out := new(GetListLevelConfirmRes)
	err := c.cc.Invoke(ctx, "/config.LevelConfirm/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *levelConfirmClient) Modify(ctx context.Context, in *ModifyLevelConfirmReq, opts ...grpc.CallOption) (*ModifyLevelConfirmRes, error) {
	out := new(ModifyLevelConfirmRes)
	err := c.cc.Invoke(ctx, "/config.LevelConfirm/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *levelConfirmClient) Delete(ctx context.Context, in *DeleteLevelConfirmReq, opts ...grpc.CallOption) (*DeleteLevelConfirmRes, error) {
	out := new(DeleteLevelConfirmRes)
	err := c.cc.Invoke(ctx, "/config.LevelConfirm/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LevelConfirmServer is the server API for LevelConfirm service.
type LevelConfirmServer interface {
	Create(context.Context, *CreateLevelConfirmReq) (*CreateLevelConfirmRes, error)
	GetOne(context.Context, *GetOneLevelConfirmReq) (*GetOneLevelConfirmRes, error)
	GetList(context.Context, *GetListLevelConfirmReq) (*GetListLevelConfirmRes, error)
	Modify(context.Context, *ModifyLevelConfirmReq) (*ModifyLevelConfirmRes, error)
	Delete(context.Context, *DeleteLevelConfirmReq) (*DeleteLevelConfirmRes, error)
}

// UnimplementedLevelConfirmServer can be embedded to have forward compatible implementations.
type UnimplementedLevelConfirmServer struct {
}

func (*UnimplementedLevelConfirmServer) Create(context.Context, *CreateLevelConfirmReq) (*CreateLevelConfirmRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedLevelConfirmServer) GetOne(context.Context, *GetOneLevelConfirmReq) (*GetOneLevelConfirmRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedLevelConfirmServer) GetList(context.Context, *GetListLevelConfirmReq) (*GetListLevelConfirmRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedLevelConfirmServer) Modify(context.Context, *ModifyLevelConfirmReq) (*ModifyLevelConfirmRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedLevelConfirmServer) Delete(context.Context, *DeleteLevelConfirmReq) (*DeleteLevelConfirmRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterLevelConfirmServer(s *grpc.Server, srv LevelConfirmServer) {
	s.RegisterService(&_LevelConfirm_serviceDesc, srv)
}

func _LevelConfirm_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLevelConfirmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LevelConfirmServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.LevelConfirm/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LevelConfirmServer).Create(ctx, req.(*CreateLevelConfirmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LevelConfirm_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneLevelConfirmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LevelConfirmServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.LevelConfirm/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LevelConfirmServer).GetOne(ctx, req.(*GetOneLevelConfirmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LevelConfirm_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListLevelConfirmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LevelConfirmServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.LevelConfirm/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LevelConfirmServer).GetList(ctx, req.(*GetListLevelConfirmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LevelConfirm_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyLevelConfirmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LevelConfirmServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.LevelConfirm/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LevelConfirmServer).Modify(ctx, req.(*ModifyLevelConfirmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LevelConfirm_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLevelConfirmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LevelConfirmServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.LevelConfirm/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LevelConfirmServer).Delete(ctx, req.(*DeleteLevelConfirmReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LevelConfirm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.LevelConfirm",
	HandlerType: (*LevelConfirmServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _LevelConfirm_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _LevelConfirm_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _LevelConfirm_GetList_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _LevelConfirm_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _LevelConfirm_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/product/v1/level_confirm.proto",
}
