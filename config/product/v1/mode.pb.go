// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: config/product/v1/mode.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 项目开发模式信息
type ModeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`                // ""
	Name       string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`             // "开发模型名称"
	Factor     float32 `protobuf:"fixed32,3,opt,name=Factor,proto3" json:"Factor"`       // "开发系数"
	Remark     string  `protobuf:"bytes,4,opt,name=Remark,proto3" json:"Remark"`         // "预留备注说明信息"
	CreateTime string  `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime"` // "新增数据时间"
	UpdateTime string  `protobuf:"bytes,6,opt,name=UpdateTime,proto3" json:"UpdateTime"` // "最新更新数据"
}

func (x *ModeInfo) Reset() {
	*x = ModeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeInfo) ProtoMessage() {}

func (x *ModeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeInfo.ProtoReflect.Descriptor instead.
func (*ModeInfo) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{0}
}

func (x *ModeInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModeInfo) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *ModeInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModeInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ModeInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreateModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`       // 开发模型名称
	Factor float32 `protobuf:"fixed32,2,opt,name=Factor,proto3" json:"Factor"` // 开发系数
	Remark string  `protobuf:"bytes,3,opt,name=Remark,proto3" json:"Remark"`   // 预留备注说明信息
}

func (x *CreateModeReq) Reset() {
	*x = CreateModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModeReq) ProtoMessage() {}

func (x *CreateModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModeReq.ProtoReflect.Descriptor instead.
func (*CreateModeReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{1}
}

func (x *CreateModeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateModeReq) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *CreateModeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建数据接口输出数据结构
type CreateModeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *ModeInfo `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode"`
}

func (x *CreateModeRes) Reset() {
	*x = CreateModeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModeRes) ProtoMessage() {}

func (x *CreateModeRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModeRes.ProtoReflect.Descriptor instead.
func (*CreateModeRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{2}
}

func (x *CreateModeRes) GetMode() *ModeInfo {
	if x != nil {
		return x.Mode
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOneModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *ModeInfo `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode"`
}

func (x *GetOneModeReq) Reset() {
	*x = GetOneModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneModeReq) ProtoMessage() {}

func (x *GetOneModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneModeReq.ProtoReflect.Descriptor instead.
func (*GetOneModeReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneModeReq) GetMode() *ModeInfo {
	if x != nil {
		return x.Mode
	}
	return nil
}

// 获取详情接口输出数据结构
type GetOneModeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *ModeInfo `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode"`
}

func (x *GetOneModeRes) Reset() {
	*x = GetOneModeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneModeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneModeRes) ProtoMessage() {}

func (x *GetOneModeRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneModeRes.ProtoReflect.Descriptor instead.
func (*GetOneModeRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneModeRes) GetMode() *ModeInfo {
	if x != nil {
		return x.Mode
	}
	return nil
}

// 列表接口输入数据结构
type GetListModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32     `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size int32     `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	Mode *ModeInfo `protobuf:"bytes,3,opt,name=Mode,proto3" json:"Mode"`
}

func (x *GetListModeReq) Reset() {
	*x = GetListModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListModeReq) ProtoMessage() {}

func (x *GetListModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListModeReq.ProtoReflect.Descriptor instead.
func (*GetListModeReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{5}
}

func (x *GetListModeReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListModeReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListModeReq) GetMode() *ModeInfo {
	if x != nil {
		return x.Mode
	}
	return nil
}

// 列表接口输出数据结构
type GetListModeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32       `protobuf:"varint,1,opt,name=Page,proto3" json:"Page"`
	Size      int32       `protobuf:"varint,2,opt,name=Size,proto3" json:"Size"`
	TotalSize int32       `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize"`
	Data      []*ModeInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data"`
}

func (x *GetListModeRes) Reset() {
	*x = GetListModeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListModeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListModeRes) ProtoMessage() {}

func (x *GetListModeRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListModeRes.ProtoReflect.Descriptor instead.
func (*GetListModeRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{6}
}

func (x *GetListModeRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListModeRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListModeRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListModeRes) GetData() []*ModeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 列表接口输入数据结构
type GetAllModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *ModeInfo `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode"`
}

func (x *GetAllModeReq) Reset() {
	*x = GetAllModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllModeReq) ProtoMessage() {}

func (x *GetAllModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllModeReq.ProtoReflect.Descriptor instead.
func (*GetAllModeReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllModeReq) GetMode() *ModeInfo {
	if x != nil {
		return x.Mode
	}
	return nil
}

// 列表接口输入数据结构
type GetAllModeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ModeInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data"`
}

func (x *GetAllModeRes) Reset() {
	*x = GetAllModeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllModeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllModeRes) ProtoMessage() {}

func (x *GetAllModeRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllModeRes.ProtoReflect.Descriptor instead.
func (*GetAllModeRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllModeRes) GetData() []*ModeInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`       // 开发模型名称
	Factor float32 `protobuf:"fixed32,2,opt,name=Factor,proto3" json:"Factor"` // 开发系数
	Remark string  `protobuf:"bytes,3,opt,name=Remark,proto3" json:"Remark"`   // 预留备注说明信息
	Id     int32   `protobuf:"varint,4,opt,name=Id,proto3" json:"Id"`          // v: required
}

func (x *ModifyModeReq) Reset() {
	*x = ModifyModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyModeReq) ProtoMessage() {}

func (x *ModifyModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyModeReq.ProtoReflect.Descriptor instead.
func (*ModifyModeReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyModeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyModeReq) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *ModifyModeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyModeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改数据接口输出数据结构
type ModifyModeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode *ModeInfo `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode"`
}

func (x *ModifyModeRes) Reset() {
	*x = ModifyModeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyModeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyModeRes) ProtoMessage() {}

func (x *ModifyModeRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyModeRes.ProtoReflect.Descriptor instead.
func (*ModifyModeRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyModeRes) GetMode() *ModeInfo {
	if x != nil {
		return x.Mode
	}
	return nil
}

// 删除数据接口输入数据结构
type DeleteModeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"` // v: required
}

func (x *DeleteModeReq) Reset() {
	*x = DeleteModeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModeReq) ProtoMessage() {}

func (x *DeleteModeReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModeReq.ProtoReflect.Descriptor instead.
func (*DeleteModeReq) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteModeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeleteModeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg"`              // v: required
}

func (x *DeleteModeRes) Reset() {
	*x = DeleteModeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_product_v1_mode_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModeRes) ProtoMessage() {}

func (x *DeleteModeRes) ProtoReflect() protoreflect.Message {
	mi := &file_config_product_v1_mode_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModeRes.ProtoReflect.Descriptor instead.
func (*DeleteModeRes) Descriptor() ([]byte, []int) {
	return file_config_product_v1_mode_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteModeRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeleteModeRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_config_product_v1_mode_proto protoreflect.FileDescriptor

var file_config_product_v1_mode_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9e, 0x01, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x35, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x7c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x24, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a,
	0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x22, 0x35, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x32, 0xe5, 0x02, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12,
	0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x6a, 0x31, 0x35, 0x37, 0x30, 0x36, 0x39, 0x33, 0x36, 0x35, 0x39, 0x2f, 0x67,
	0x66, 0x63, 0x71, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_product_v1_mode_proto_rawDescOnce sync.Once
	file_config_product_v1_mode_proto_rawDescData = file_config_product_v1_mode_proto_rawDesc
)

func file_config_product_v1_mode_proto_rawDescGZIP() []byte {
	file_config_product_v1_mode_proto_rawDescOnce.Do(func() {
		file_config_product_v1_mode_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_product_v1_mode_proto_rawDescData)
	})
	return file_config_product_v1_mode_proto_rawDescData
}

var file_config_product_v1_mode_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_config_product_v1_mode_proto_goTypes = []interface{}{
	(*ModeInfo)(nil),       // 0: config.ModeInfo
	(*CreateModeReq)(nil),  // 1: config.CreateModeReq
	(*CreateModeRes)(nil),  // 2: config.CreateModeRes
	(*GetOneModeReq)(nil),  // 3: config.GetOneModeReq
	(*GetOneModeRes)(nil),  // 4: config.GetOneModeRes
	(*GetListModeReq)(nil), // 5: config.GetListModeReq
	(*GetListModeRes)(nil), // 6: config.GetListModeRes
	(*GetAllModeReq)(nil),  // 7: config.GetAllModeReq
	(*GetAllModeRes)(nil),  // 8: config.GetAllModeRes
	(*ModifyModeReq)(nil),  // 9: config.ModifyModeReq
	(*ModifyModeRes)(nil),  // 10: config.ModifyModeRes
	(*DeleteModeReq)(nil),  // 11: config.DeleteModeReq
	(*DeleteModeRes)(nil),  // 12: config.DeleteModeRes
}
var file_config_product_v1_mode_proto_depIdxs = []int32{
	0,  // 0: config.CreateModeRes.Mode:type_name -> config.ModeInfo
	0,  // 1: config.GetOneModeReq.Mode:type_name -> config.ModeInfo
	0,  // 2: config.GetOneModeRes.Mode:type_name -> config.ModeInfo
	0,  // 3: config.GetListModeReq.Mode:type_name -> config.ModeInfo
	0,  // 4: config.GetListModeRes.Data:type_name -> config.ModeInfo
	0,  // 5: config.GetAllModeReq.Mode:type_name -> config.ModeInfo
	0,  // 6: config.GetAllModeRes.Data:type_name -> config.ModeInfo
	0,  // 7: config.ModifyModeRes.Mode:type_name -> config.ModeInfo
	1,  // 8: config.Mode.Create:input_type -> config.CreateModeReq
	3,  // 9: config.Mode.GetOne:input_type -> config.GetOneModeReq
	5,  // 10: config.Mode.GetList:input_type -> config.GetListModeReq
	7,  // 11: config.Mode.GetAll:input_type -> config.GetAllModeReq
	9,  // 12: config.Mode.Modify:input_type -> config.ModifyModeReq
	11, // 13: config.Mode.Delete:input_type -> config.DeleteModeReq
	2,  // 14: config.Mode.Create:output_type -> config.CreateModeRes
	4,  // 15: config.Mode.GetOne:output_type -> config.GetOneModeRes
	6,  // 16: config.Mode.GetList:output_type -> config.GetListModeRes
	8,  // 17: config.Mode.GetAll:output_type -> config.GetAllModeRes
	10, // 18: config.Mode.Modify:output_type -> config.ModifyModeRes
	12, // 19: config.Mode.Delete:output_type -> config.DeleteModeRes
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_config_product_v1_mode_proto_init() }
func file_config_product_v1_mode_proto_init() {
	if File_config_product_v1_mode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_product_v1_mode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneModeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListModeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllModeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyModeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_product_v1_mode_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_product_v1_mode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_product_v1_mode_proto_goTypes,
		DependencyIndexes: file_config_product_v1_mode_proto_depIdxs,
		MessageInfos:      file_config_product_v1_mode_proto_msgTypes,
	}.Build()
	File_config_product_v1_mode_proto = out.File
	file_config_product_v1_mode_proto_rawDesc = nil
	file_config_product_v1_mode_proto_goTypes = nil
	file_config_product_v1_mode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ModeClient is the client API for Mode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModeClient interface {
	Create(ctx context.Context, in *CreateModeReq, opts ...grpc.CallOption) (*CreateModeRes, error)
	GetOne(ctx context.Context, in *GetOneModeReq, opts ...grpc.CallOption) (*GetOneModeRes, error)
	GetList(ctx context.Context, in *GetListModeReq, opts ...grpc.CallOption) (*GetListModeRes, error)
	GetAll(ctx context.Context, in *GetAllModeReq, opts ...grpc.CallOption) (*GetAllModeRes, error)
	Modify(ctx context.Context, in *ModifyModeReq, opts ...grpc.CallOption) (*ModifyModeRes, error)
	Delete(ctx context.Context, in *DeleteModeReq, opts ...grpc.CallOption) (*DeleteModeRes, error)
}

type modeClient struct {
	cc grpc.ClientConnInterface
}

func NewModeClient(cc grpc.ClientConnInterface) ModeClient {
	return &modeClient{cc}
}

func (c *modeClient) Create(ctx context.Context, in *CreateModeReq, opts ...grpc.CallOption) (*CreateModeRes, error) {
	out := new(CreateModeRes)
	err := c.cc.Invoke(ctx, "/config.Mode/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modeClient) GetOne(ctx context.Context, in *GetOneModeReq, opts ...grpc.CallOption) (*GetOneModeRes, error) {
	out := new(GetOneModeRes)
	err := c.cc.Invoke(ctx, "/config.Mode/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modeClient) GetList(ctx context.Context, in *GetListModeReq, opts ...grpc.CallOption) (*GetListModeRes, error) {
	out := new(GetListModeRes)
	err := c.cc.Invoke(ctx, "/config.Mode/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modeClient) GetAll(ctx context.Context, in *GetAllModeReq, opts ...grpc.CallOption) (*GetAllModeRes, error) {
	out := new(GetAllModeRes)
	err := c.cc.Invoke(ctx, "/config.Mode/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modeClient) Modify(ctx context.Context, in *ModifyModeReq, opts ...grpc.CallOption) (*ModifyModeRes, error) {
	out := new(ModifyModeRes)
	err := c.cc.Invoke(ctx, "/config.Mode/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modeClient) Delete(ctx context.Context, in *DeleteModeReq, opts ...grpc.CallOption) (*DeleteModeRes, error) {
	out := new(DeleteModeRes)
	err := c.cc.Invoke(ctx, "/config.Mode/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModeServer is the server API for Mode service.
type ModeServer interface {
	Create(context.Context, *CreateModeReq) (*CreateModeRes, error)
	GetOne(context.Context, *GetOneModeReq) (*GetOneModeRes, error)
	GetList(context.Context, *GetListModeReq) (*GetListModeRes, error)
	GetAll(context.Context, *GetAllModeReq) (*GetAllModeRes, error)
	Modify(context.Context, *ModifyModeReq) (*ModifyModeRes, error)
	Delete(context.Context, *DeleteModeReq) (*DeleteModeRes, error)
}

// UnimplementedModeServer can be embedded to have forward compatible implementations.
type UnimplementedModeServer struct {
}

func (*UnimplementedModeServer) Create(context.Context, *CreateModeReq) (*CreateModeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedModeServer) GetOne(context.Context, *GetOneModeReq) (*GetOneModeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedModeServer) GetList(context.Context, *GetListModeReq) (*GetListModeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedModeServer) GetAll(context.Context, *GetAllModeReq) (*GetAllModeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedModeServer) Modify(context.Context, *ModifyModeReq) (*ModifyModeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedModeServer) Delete(context.Context, *DeleteModeReq) (*DeleteModeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterModeServer(s *grpc.Server, srv ModeServer) {
	s.RegisterService(&_Mode_serviceDesc, srv)
}

func _Mode_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateModeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModeServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Mode/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModeServer).Create(ctx, req.(*CreateModeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mode_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneModeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModeServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Mode/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModeServer).GetOne(ctx, req.(*GetOneModeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mode_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListModeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModeServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Mode/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModeServer).GetList(ctx, req.(*GetListModeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mode_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllModeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModeServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Mode/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModeServer).GetAll(ctx, req.(*GetAllModeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mode_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyModeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModeServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Mode/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModeServer).Modify(ctx, req.(*ModifyModeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mode_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModeServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Mode/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModeServer).Delete(ctx, req.(*DeleteModeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.Mode",
	HandlerType: (*ModeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Mode_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _Mode_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _Mode_GetList_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _Mode_GetAll_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _Mode_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Mode_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/product/v1/mode.proto",
}
