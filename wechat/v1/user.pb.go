// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: wechat/v1/user.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 在职状态（1：在职 2：试用期 3：实习期 4：已离职）
type StatusEnum int32

const (
	StatusEnum_anything   StatusEnum = 0
	StatusEnum_working    StatusEnum = 1
	StatusEnum_tryout     StatusEnum = 2
	StatusEnum_interns    StatusEnum = 3
	StatusEnum_terminated StatusEnum = 4
)

// Enum value maps for StatusEnum.
var (
	StatusEnum_name = map[int32]string{
		0: "anything",
		1: "working",
		2: "tryout",
		3: "interns",
		4: "terminated",
	}
	StatusEnum_value = map[string]int32{
		"anything":   0,
		"working":    1,
		"tryout":     2,
		"interns":    3,
		"terminated": 4,
	}
)

func (x StatusEnum) Enum() *StatusEnum {
	p := new(StatusEnum)
	*p = x
	return p
}

func (x StatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_wechat_v1_user_proto_enumTypes[0].Descriptor()
}

func (StatusEnum) Type() protoreflect.EnumType {
	return &file_wechat_v1_user_proto_enumTypes[0]
}

func (x StatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusEnum.Descriptor instead.
func (StatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{0}
}

// 性别（0：未知 1：男  2：女）
type SexEnum int32

const (
	SexEnum_unknow SexEnum = 0
	SexEnum_man    SexEnum = 1
	SexEnum_woman  SexEnum = 2
)

// Enum value maps for SexEnum.
var (
	SexEnum_name = map[int32]string{
		0: "unknow",
		1: "man",
		2: "woman",
	}
	SexEnum_value = map[string]int32{
		"unknow": 0,
		"man":    1,
		"woman":  2,
	}
)

func (x SexEnum) Enum() *SexEnum {
	p := new(SexEnum)
	*p = x
	return p
}

func (x SexEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SexEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_wechat_v1_user_proto_enumTypes[1].Descriptor()
}

func (SexEnum) Type() protoreflect.EnumType {
	return &file_wechat_v1_user_proto_enumTypes[1]
}

func (x SexEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SexEnum.Descriptor instead.
func (SexEnum) EnumDescriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{1}
}

// 员工信息公共数据结构
type WechatUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserName     string     `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`                      // 员工姓名
	WorkNumber   string     `protobuf:"bytes,3,opt,name=WorkNumber,proto3" json:"WorkNumber,omitempty"`                  // 员工工号
	Sex          SexEnum    `protobuf:"varint,4,opt,name=Sex,proto3,enum=common.SexEnum" json:"Sex,omitempty"`           // 性别（0：未知 1：男  2：女）
	Phone        string     `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`                            // 手机号码
	Email        string     `protobuf:"bytes,6,opt,name=Email,proto3" json:"Email,omitempty"`                            // 邮箱号码
	DepartId     string     `protobuf:"bytes,7,opt,name=DepartId,proto3" json:"DepartId,omitempty"`                      // 部门ID
	JobLevel     int32      `protobuf:"varint,8,opt,name=JobLevel,proto3" json:"JobLevel,omitempty"`                     // 职级
	JobId        string     `protobuf:"bytes,9,opt,name=JobId,proto3" json:"JobId,omitempty"`                            // 岗位信息
	InstructorId int32      `protobuf:"varint,10,opt,name=InstructorId,proto3" json:"InstructorId,omitempty"`            // 指导老师
	Status       StatusEnum `protobuf:"varint,11,opt,name=Status,proto3,enum=common.StatusEnum" json:"Status,omitempty"` // 在职状态（1：在职 2：试用期 3：实习期 4：已离职）
	Remark       string     `protobuf:"bytes,12,opt,name=Remark,proto3" json:"Remark,omitempty"`                         // 预留备注信息
	CreateTime   string     `protobuf:"bytes,13,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`                 // 数据新增时间
	UpdateTime   string     `protobuf:"bytes,14,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`                 // 最后一次更新数据时间
}

func (x *WechatUserInfo) Reset() {
	*x = WechatUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserInfo) ProtoMessage() {}

func (x *WechatUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserInfo.ProtoReflect.Descriptor instead.
func (*WechatUserInfo) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *WechatUserInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatUserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *WechatUserInfo) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *WechatUserInfo) GetSex() SexEnum {
	if x != nil {
		return x.Sex
	}
	return SexEnum_unknow
}

func (x *WechatUserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *WechatUserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *WechatUserInfo) GetDepartId() string {
	if x != nil {
		return x.DepartId
	}
	return ""
}

func (x *WechatUserInfo) GetJobLevel() int32 {
	if x != nil {
		return x.JobLevel
	}
	return 0
}

func (x *WechatUserInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *WechatUserInfo) GetInstructorId() int32 {
	if x != nil {
		return x.InstructorId
	}
	return 0
}

func (x *WechatUserInfo) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_anything
}

func (x *WechatUserInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *WechatUserInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WechatUserInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 创建数据接口输入数据结构
type CreateWechatUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark       string     `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark,omitempty"`
	UserName     string     `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`                      // 员工姓名
	WorkNumber   string     `protobuf:"bytes,3,opt,name=WorkNumber,proto3" json:"WorkNumber,omitempty"`                  // 员工工号
	Sex          SexEnum    `protobuf:"varint,4,opt,name=Sex,proto3,enum=common.SexEnum" json:"Sex,omitempty"`           // 性别（0：未知 1：男  2：女）
	Phone        string     `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`                            // 手机号码
	Email        string     `protobuf:"bytes,6,opt,name=Email,proto3" json:"Email,omitempty"`                            // 邮箱号码
	JobLevel     int32      `protobuf:"varint,7,opt,name=JobLevel,proto3" json:"JobLevel,omitempty"`                     // 职级
	JobId        []int32    `protobuf:"varint,8,rep,packed,name=JobId,proto3" json:"JobId,omitempty"`                    // 岗位信息
	InstructorId int32      `protobuf:"varint,9,opt,name=InstructorId,proto3" json:"InstructorId,omitempty"`             // 指导老师
	Status       StatusEnum `protobuf:"varint,10,opt,name=Status,proto3,enum=common.StatusEnum" json:"Status,omitempty"` // 在职状态（1：在职 2：试用期 3：实习期 4：已离职）
	DepartId     string     `protobuf:"bytes,11,opt,name=DepartId,proto3" json:"DepartId,omitempty"`                     // 部门ID
}

func (x *CreateWechatUserReq) Reset() {
	*x = CreateWechatUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWechatUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWechatUserReq) ProtoMessage() {}

func (x *CreateWechatUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWechatUserReq.ProtoReflect.Descriptor instead.
func (*CreateWechatUserReq) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWechatUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateWechatUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateWechatUserReq) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *CreateWechatUserReq) GetSex() SexEnum {
	if x != nil {
		return x.Sex
	}
	return SexEnum_unknow
}

func (x *CreateWechatUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateWechatUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateWechatUserReq) GetJobLevel() int32 {
	if x != nil {
		return x.JobLevel
	}
	return 0
}

func (x *CreateWechatUserReq) GetJobId() []int32 {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *CreateWechatUserReq) GetInstructorId() int32 {
	if x != nil {
		return x.InstructorId
	}
	return 0
}

func (x *CreateWechatUserReq) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_anything
}

func (x *CreateWechatUserReq) GetDepartId() string {
	if x != nil {
		return x.DepartId
	}
	return ""
}

// 创建数据接口输出数据结构
type CreateWechatUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WechatUser *WechatUserInfo `protobuf:"bytes,1,opt,name=WechatUser,proto3" json:"WechatUser,omitempty"`
}

func (x *CreateWechatUserRes) Reset() {
	*x = CreateWechatUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWechatUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWechatUserRes) ProtoMessage() {}

func (x *CreateWechatUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWechatUserRes.ProtoReflect.Descriptor instead.
func (*CreateWechatUserRes) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWechatUserRes) GetWechatUser() *WechatUserInfo {
	if x != nil {
		return x.WechatUser
	}
	return nil
}

// 获取详情接口输入数据结构
type GetOneWechatUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                                // v: required
	UserName   string     `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`                     // 员工姓名
	WorkNumber string     `protobuf:"bytes,3,opt,name=WorkNumber,proto3" json:"WorkNumber,omitempty"`                 // 员工工号
	Phone      string     `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`                           // 手机号码
	Email      string     `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`                           // 邮箱号码
	DepartId   []int32    `protobuf:"varint,6,rep,packed,name=DepartId,proto3" json:"DepartId,omitempty"`             // 部门ID
	JobId      []int32    `protobuf:"varint,7,rep,packed,name=JobId,proto3" json:"JobId,omitempty"`                   // 岗位ID
	JobLevel   []int32    `protobuf:"varint,8,rep,packed,name=JobLevel,proto3" json:"JobLevel,omitempty"`             // 职级
	Status     StatusEnum `protobuf:"varint,9,opt,name=status,proto3,enum=common.StatusEnum" json:"status,omitempty"` // 在职状态
}

func (x *GetOneWechatUserReq) Reset() {
	*x = GetOneWechatUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneWechatUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneWechatUserReq) ProtoMessage() {}

func (x *GetOneWechatUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneWechatUserReq.ProtoReflect.Descriptor instead.
func (*GetOneWechatUserReq) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneWechatUserReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetOneWechatUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetOneWechatUserReq) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *GetOneWechatUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetOneWechatUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetOneWechatUserReq) GetDepartId() []int32 {
	if x != nil {
		return x.DepartId
	}
	return nil
}

func (x *GetOneWechatUserReq) GetJobId() []int32 {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *GetOneWechatUserReq) GetJobLevel() []int32 {
	if x != nil {
		return x.JobLevel
	}
	return nil
}

func (x *GetOneWechatUserReq) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_anything
}

// 获取详情接口输出数据结构
type GetOneWechatUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WechatUser   *WechatUserInfo `protobuf:"bytes,1,opt,name=WechatUser,proto3" json:"WechatUser,omitempty"`
	DepartString string          `protobuf:"bytes,2,opt,name=DepartString,proto3" json:"DepartString,omitempty"`
	DepartIds    []int32         `protobuf:"varint,3,rep,packed,name=DepartIds,proto3" json:"DepartIds,omitempty"` // 部门ID
	JobIdString  string          `protobuf:"bytes,4,opt,name=JobIdString,proto3" json:"JobIdString,omitempty"`     // 岗位信息
	JobIds       []int32         `protobuf:"varint,5,rep,packed,name=JobIds,proto3" json:"JobIds,omitempty"`       // 岗位ID
}

func (x *GetOneWechatUserRes) Reset() {
	*x = GetOneWechatUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneWechatUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneWechatUserRes) ProtoMessage() {}

func (x *GetOneWechatUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneWechatUserRes.ProtoReflect.Descriptor instead.
func (*GetOneWechatUserRes) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneWechatUserRes) GetWechatUser() *WechatUserInfo {
	if x != nil {
		return x.WechatUser
	}
	return nil
}

func (x *GetOneWechatUserRes) GetDepartString() string {
	if x != nil {
		return x.DepartString
	}
	return ""
}

func (x *GetOneWechatUserRes) GetDepartIds() []int32 {
	if x != nil {
		return x.DepartIds
	}
	return nil
}

func (x *GetOneWechatUserRes) GetJobIdString() string {
	if x != nil {
		return x.JobIdString
	}
	return ""
}

func (x *GetOneWechatUserRes) GetJobIds() []int32 {
	if x != nil {
		return x.JobIds
	}
	return nil
}

// 列表接口输入数据结构
type GetListWechatUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32           `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Size       int32           `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	WechatUser *WechatUserInfo `protobuf:"bytes,3,opt,name=WechatUser,proto3" json:"WechatUser,omitempty"`
}

func (x *GetListWechatUserReq) Reset() {
	*x = GetListWechatUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListWechatUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListWechatUserReq) ProtoMessage() {}

func (x *GetListWechatUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListWechatUserReq.ProtoReflect.Descriptor instead.
func (*GetListWechatUserReq) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetListWechatUserReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListWechatUserReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListWechatUserReq) GetWechatUser() *WechatUserInfo {
	if x != nil {
		return x.WechatUser
	}
	return nil
}

// 列表接口输出数据结构
type GetListWechatUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32             `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Size      int32             `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	TotalSize int32             `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"`
	Data      []*WechatUserInfo `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetListWechatUserRes) Reset() {
	*x = GetListWechatUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListWechatUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListWechatUserRes) ProtoMessage() {}

func (x *GetListWechatUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListWechatUserRes.ProtoReflect.Descriptor instead.
func (*GetListWechatUserRes) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetListWechatUserRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListWechatUserRes) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetListWechatUserRes) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetListWechatUserRes) GetData() []*WechatUserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 列表接口输入数据结构
type GetAllWechatUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WechatUser *WechatUserInfo `protobuf:"bytes,1,opt,name=WechatUser,proto3" json:"WechatUser,omitempty"`
}

func (x *GetAllWechatUserReq) Reset() {
	*x = GetAllWechatUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllWechatUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllWechatUserReq) ProtoMessage() {}

func (x *GetAllWechatUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllWechatUserReq.ProtoReflect.Descriptor instead.
func (*GetAllWechatUserReq) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllWechatUserReq) GetWechatUser() *WechatUserInfo {
	if x != nil {
		return x.WechatUser
	}
	return nil
}

// 列表接口输出数据结构
type GetAllWechatUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WechatUserInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetAllWechatUserRes) Reset() {
	*x = GetAllWechatUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllWechatUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllWechatUserRes) ProtoMessage() {}

func (x *GetAllWechatUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllWechatUserRes.ProtoReflect.Descriptor instead.
func (*GetAllWechatUserRes) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllWechatUserRes) GetData() []*WechatUserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 修改数据接口输入数据结构
type ModifyWechatUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark       string     `protobuf:"bytes,1,opt,name=Remark,proto3" json:"Remark,omitempty"`
	UserName     string     `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`                      // 员工姓名
	WorkNumber   string     `protobuf:"bytes,3,opt,name=WorkNumber,proto3" json:"WorkNumber,omitempty"`                  // 员工工号
	Sex          SexEnum    `protobuf:"varint,4,opt,name=Sex,proto3,enum=common.SexEnum" json:"Sex,omitempty"`           // 性别（0：未知 1：男  2：女）
	Phone        string     `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`                            // 手机号码
	Email        string     `protobuf:"bytes,6,opt,name=Email,proto3" json:"Email,omitempty"`                            // 邮箱号码
	JobLevel     int32      `protobuf:"varint,7,opt,name=JobLevel,proto3" json:"JobLevel,omitempty"`                     // 职级
	JobId        []int32    `protobuf:"varint,8,rep,packed,name=JobId,proto3" json:"JobId,omitempty"`                    // 岗位信息
	InstructorId int32      `protobuf:"varint,9,opt,name=InstructorId,proto3" json:"InstructorId,omitempty"`             // 指导老师
	Status       StatusEnum `protobuf:"varint,10,opt,name=Status,proto3,enum=common.StatusEnum" json:"Status,omitempty"` // 在职状态（1：在职 2：试用期 3：实习期 4：已离职）
	Id           int32      `protobuf:"varint,11,opt,name=Id,proto3" json:"Id,omitempty"`                                // v: required
	DepartId     string     `protobuf:"bytes,12,opt,name=DepartId,proto3" json:"DepartId,omitempty"`                     // 部门ID
}

func (x *ModifyWechatUserReq) Reset() {
	*x = ModifyWechatUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyWechatUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyWechatUserReq) ProtoMessage() {}

func (x *ModifyWechatUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyWechatUserReq.ProtoReflect.Descriptor instead.
func (*ModifyWechatUserReq) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyWechatUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyWechatUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ModifyWechatUserReq) GetWorkNumber() string {
	if x != nil {
		return x.WorkNumber
	}
	return ""
}

func (x *ModifyWechatUserReq) GetSex() SexEnum {
	if x != nil {
		return x.Sex
	}
	return SexEnum_unknow
}

func (x *ModifyWechatUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ModifyWechatUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ModifyWechatUserReq) GetJobLevel() int32 {
	if x != nil {
		return x.JobLevel
	}
	return 0
}

func (x *ModifyWechatUserReq) GetJobId() []int32 {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *ModifyWechatUserReq) GetInstructorId() int32 {
	if x != nil {
		return x.InstructorId
	}
	return 0
}

func (x *ModifyWechatUserReq) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_anything
}

func (x *ModifyWechatUserReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModifyWechatUserReq) GetDepartId() string {
	if x != nil {
		return x.DepartId
	}
	return ""
}

// 修改数据接口输出数据结构
type ModifyWechatUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WechatUser *WechatUserInfo `protobuf:"bytes,3,opt,name=WechatUser,proto3" json:"WechatUser,omitempty"`
}

func (x *ModifyWechatUserRes) Reset() {
	*x = ModifyWechatUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyWechatUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyWechatUserRes) ProtoMessage() {}

func (x *ModifyWechatUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyWechatUserRes.ProtoReflect.Descriptor instead.
func (*ModifyWechatUserRes) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyWechatUserRes) GetWechatUser() *WechatUserInfo {
	if x != nil {
		return x.WechatUser
	}
	return nil
}

// 删除数据接口输入数据结构
type DeleteWechatUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` // v: required
}

func (x *DeleteWechatUserReq) Reset() {
	*x = DeleteWechatUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWechatUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWechatUserReq) ProtoMessage() {}

func (x *DeleteWechatUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWechatUserReq.ProtoReflect.Descriptor instead.
func (*DeleteWechatUserReq) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteWechatUserReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除数据接口输出数据结构
type DeleteWechatUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"` // v: required
	Msg       string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`              // v: required
}

func (x *DeleteWechatUserRes) Reset() {
	*x = DeleteWechatUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_v1_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWechatUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWechatUserRes) ProtoMessage() {}

func (x *DeleteWechatUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_v1_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWechatUserRes.ProtoReflect.Descriptor instead.
func (*DeleteWechatUserRes) Descriptor() ([]byte, []int) {
	return file_wechat_v1_user_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteWechatUserRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DeleteWechatUserRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_wechat_v1_user_proto protoreflect.FileDescriptor

var file_wechat_v1_user_proto_rawDesc = []byte{
	0x0a, 0x14, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xa1,
	0x03, 0x0a, 0x0e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x03, 0x53, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x78, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x03, 0x53, 0x65, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x78, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x03, 0x53, 0x65,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x87, 0x02, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08,
	0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x49,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x73,
	0x22, 0x76, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0a, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x02, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x78, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x03, 0x53, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x25, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x2a, 0x50, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x6e, 0x79,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x74, 0x72, 0x79, 0x6f, 0x75, 0x74, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x10, 0x04, 0x2a, 0x29, 0x0a,
	0x07, 0x53, 0x65, 0x78, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x6d, 0x61, 0x6e, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x10, 0x02, 0x32, 0xb3, 0x03, 0x0a, 0x0a, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6a, 0x31,
	0x35, 0x37, 0x30, 0x36, 0x39, 0x33, 0x36, 0x35, 0x39, 0x2f, 0x67, 0x66, 0x63, 0x71, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wechat_v1_user_proto_rawDescOnce sync.Once
	file_wechat_v1_user_proto_rawDescData = file_wechat_v1_user_proto_rawDesc
)

func file_wechat_v1_user_proto_rawDescGZIP() []byte {
	file_wechat_v1_user_proto_rawDescOnce.Do(func() {
		file_wechat_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_wechat_v1_user_proto_rawDescData)
	})
	return file_wechat_v1_user_proto_rawDescData
}

var file_wechat_v1_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_wechat_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_wechat_v1_user_proto_goTypes = []interface{}{
	(StatusEnum)(0),              // 0: common.StatusEnum
	(SexEnum)(0),                 // 1: common.SexEnum
	(*WechatUserInfo)(nil),       // 2: common.WechatUserInfo
	(*CreateWechatUserReq)(nil),  // 3: common.CreateWechatUserReq
	(*CreateWechatUserRes)(nil),  // 4: common.CreateWechatUserRes
	(*GetOneWechatUserReq)(nil),  // 5: common.GetOneWechatUserReq
	(*GetOneWechatUserRes)(nil),  // 6: common.GetOneWechatUserRes
	(*GetListWechatUserReq)(nil), // 7: common.GetListWechatUserReq
	(*GetListWechatUserRes)(nil), // 8: common.GetListWechatUserRes
	(*GetAllWechatUserReq)(nil),  // 9: common.GetAllWechatUserReq
	(*GetAllWechatUserRes)(nil),  // 10: common.GetAllWechatUserRes
	(*ModifyWechatUserReq)(nil),  // 11: common.ModifyWechatUserReq
	(*ModifyWechatUserRes)(nil),  // 12: common.ModifyWechatUserRes
	(*DeleteWechatUserReq)(nil),  // 13: common.DeleteWechatUserReq
	(*DeleteWechatUserRes)(nil),  // 14: common.DeleteWechatUserRes
}
var file_wechat_v1_user_proto_depIdxs = []int32{
	1,  // 0: common.WechatUserInfo.Sex:type_name -> common.SexEnum
	0,  // 1: common.WechatUserInfo.Status:type_name -> common.StatusEnum
	1,  // 2: common.CreateWechatUserReq.Sex:type_name -> common.SexEnum
	0,  // 3: common.CreateWechatUserReq.Status:type_name -> common.StatusEnum
	2,  // 4: common.CreateWechatUserRes.WechatUser:type_name -> common.WechatUserInfo
	0,  // 5: common.GetOneWechatUserReq.status:type_name -> common.StatusEnum
	2,  // 6: common.GetOneWechatUserRes.WechatUser:type_name -> common.WechatUserInfo
	2,  // 7: common.GetListWechatUserReq.WechatUser:type_name -> common.WechatUserInfo
	2,  // 8: common.GetListWechatUserRes.Data:type_name -> common.WechatUserInfo
	2,  // 9: common.GetAllWechatUserReq.WechatUser:type_name -> common.WechatUserInfo
	2,  // 10: common.GetAllWechatUserRes.Data:type_name -> common.WechatUserInfo
	1,  // 11: common.ModifyWechatUserReq.Sex:type_name -> common.SexEnum
	0,  // 12: common.ModifyWechatUserReq.Status:type_name -> common.StatusEnum
	2,  // 13: common.ModifyWechatUserRes.WechatUser:type_name -> common.WechatUserInfo
	3,  // 14: common.WechatUser.Create:input_type -> common.CreateWechatUserReq
	5,  // 15: common.WechatUser.GetOne:input_type -> common.GetOneWechatUserReq
	7,  // 16: common.WechatUser.GetList:input_type -> common.GetListWechatUserReq
	9,  // 17: common.WechatUser.GetAll:input_type -> common.GetAllWechatUserReq
	11, // 18: common.WechatUser.Modify:input_type -> common.ModifyWechatUserReq
	13, // 19: common.WechatUser.Delete:input_type -> common.DeleteWechatUserReq
	4,  // 20: common.WechatUser.Create:output_type -> common.CreateWechatUserRes
	6,  // 21: common.WechatUser.GetOne:output_type -> common.GetOneWechatUserRes
	8,  // 22: common.WechatUser.GetList:output_type -> common.GetListWechatUserRes
	10, // 23: common.WechatUser.GetAll:output_type -> common.GetAllWechatUserRes
	12, // 24: common.WechatUser.Modify:output_type -> common.ModifyWechatUserRes
	14, // 25: common.WechatUser.Delete:output_type -> common.DeleteWechatUserRes
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_wechat_v1_user_proto_init() }
func file_wechat_v1_user_proto_init() {
	if File_wechat_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wechat_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWechatUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWechatUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneWechatUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneWechatUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListWechatUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListWechatUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllWechatUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllWechatUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyWechatUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyWechatUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWechatUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_v1_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWechatUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wechat_v1_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wechat_v1_user_proto_goTypes,
		DependencyIndexes: file_wechat_v1_user_proto_depIdxs,
		EnumInfos:         file_wechat_v1_user_proto_enumTypes,
		MessageInfos:      file_wechat_v1_user_proto_msgTypes,
	}.Build()
	File_wechat_v1_user_proto = out.File
	file_wechat_v1_user_proto_rawDesc = nil
	file_wechat_v1_user_proto_goTypes = nil
	file_wechat_v1_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WechatUserClient is the client API for WechatUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WechatUserClient interface {
	Create(ctx context.Context, in *CreateWechatUserReq, opts ...grpc.CallOption) (*CreateWechatUserRes, error)
	GetOne(ctx context.Context, in *GetOneWechatUserReq, opts ...grpc.CallOption) (*GetOneWechatUserRes, error)
	GetList(ctx context.Context, in *GetListWechatUserReq, opts ...grpc.CallOption) (*GetListWechatUserRes, error)
	GetAll(ctx context.Context, in *GetAllWechatUserReq, opts ...grpc.CallOption) (*GetAllWechatUserRes, error)
	Modify(ctx context.Context, in *ModifyWechatUserReq, opts ...grpc.CallOption) (*ModifyWechatUserRes, error)
	Delete(ctx context.Context, in *DeleteWechatUserReq, opts ...grpc.CallOption) (*DeleteWechatUserRes, error)
}

type wechatUserClient struct {
	cc grpc.ClientConnInterface
}

func NewWechatUserClient(cc grpc.ClientConnInterface) WechatUserClient {
	return &wechatUserClient{cc}
}

func (c *wechatUserClient) Create(ctx context.Context, in *CreateWechatUserReq, opts ...grpc.CallOption) (*CreateWechatUserRes, error) {
	out := new(CreateWechatUserRes)
	err := c.cc.Invoke(ctx, "/common.WechatUser/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatUserClient) GetOne(ctx context.Context, in *GetOneWechatUserReq, opts ...grpc.CallOption) (*GetOneWechatUserRes, error) {
	out := new(GetOneWechatUserRes)
	err := c.cc.Invoke(ctx, "/common.WechatUser/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatUserClient) GetList(ctx context.Context, in *GetListWechatUserReq, opts ...grpc.CallOption) (*GetListWechatUserRes, error) {
	out := new(GetListWechatUserRes)
	err := c.cc.Invoke(ctx, "/common.WechatUser/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatUserClient) GetAll(ctx context.Context, in *GetAllWechatUserReq, opts ...grpc.CallOption) (*GetAllWechatUserRes, error) {
	out := new(GetAllWechatUserRes)
	err := c.cc.Invoke(ctx, "/common.WechatUser/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatUserClient) Modify(ctx context.Context, in *ModifyWechatUserReq, opts ...grpc.CallOption) (*ModifyWechatUserRes, error) {
	out := new(ModifyWechatUserRes)
	err := c.cc.Invoke(ctx, "/common.WechatUser/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wechatUserClient) Delete(ctx context.Context, in *DeleteWechatUserReq, opts ...grpc.CallOption) (*DeleteWechatUserRes, error) {
	out := new(DeleteWechatUserRes)
	err := c.cc.Invoke(ctx, "/common.WechatUser/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WechatUserServer is the server API for WechatUser service.
type WechatUserServer interface {
	Create(context.Context, *CreateWechatUserReq) (*CreateWechatUserRes, error)
	GetOne(context.Context, *GetOneWechatUserReq) (*GetOneWechatUserRes, error)
	GetList(context.Context, *GetListWechatUserReq) (*GetListWechatUserRes, error)
	GetAll(context.Context, *GetAllWechatUserReq) (*GetAllWechatUserRes, error)
	Modify(context.Context, *ModifyWechatUserReq) (*ModifyWechatUserRes, error)
	Delete(context.Context, *DeleteWechatUserReq) (*DeleteWechatUserRes, error)
}

// UnimplementedWechatUserServer can be embedded to have forward compatible implementations.
type UnimplementedWechatUserServer struct {
}

func (*UnimplementedWechatUserServer) Create(context.Context, *CreateWechatUserReq) (*CreateWechatUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedWechatUserServer) GetOne(context.Context, *GetOneWechatUserReq) (*GetOneWechatUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedWechatUserServer) GetList(context.Context, *GetListWechatUserReq) (*GetListWechatUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedWechatUserServer) GetAll(context.Context, *GetAllWechatUserReq) (*GetAllWechatUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedWechatUserServer) Modify(context.Context, *ModifyWechatUserReq) (*ModifyWechatUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedWechatUserServer) Delete(context.Context, *DeleteWechatUserReq) (*DeleteWechatUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterWechatUserServer(s *grpc.Server, srv WechatUserServer) {
	s.RegisterService(&_WechatUser_serviceDesc, srv)
}

func _WechatUser_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWechatUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatUserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.WechatUser/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatUserServer).Create(ctx, req.(*CreateWechatUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatUser_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneWechatUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatUserServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.WechatUser/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatUserServer).GetOne(ctx, req.(*GetOneWechatUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatUser_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListWechatUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatUserServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.WechatUser/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatUserServer).GetList(ctx, req.(*GetListWechatUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatUser_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllWechatUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatUserServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.WechatUser/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatUserServer).GetAll(ctx, req.(*GetAllWechatUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatUser_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWechatUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatUserServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.WechatUser/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatUserServer).Modify(ctx, req.(*ModifyWechatUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _WechatUser_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWechatUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatUserServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.WechatUser/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatUserServer).Delete(ctx, req.(*DeleteWechatUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _WechatUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.WechatUser",
	HandlerType: (*WechatUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _WechatUser_Create_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _WechatUser_GetOne_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _WechatUser_GetList_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _WechatUser_GetAll_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _WechatUser_Modify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _WechatUser_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wechat/v1/user.proto",
}
